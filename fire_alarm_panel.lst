                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.0 #15242 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module fire_alarm_panel
                                      6 	
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _LOWM
                                     12 	.globl _LOWB
                                     13 	.globl _ISO2H
                                     14 	.globl _ISO1H
                                     15 	.globl _ISO2
                                     16 	.globl _ISO1
                                     17 	.globl _TEVQ
                                     18 	.globl _TLAMP
                                     19 	.globl _TEXT4
                                     20 	.globl _OPEN
                                     21 	.globl _SHORT
                                     22 	.globl _FIRE
                                     23 	.globl _TZONE2
                                     24 	.globl _TZONE1
                                     25 	.globl _TEXT3
                                     26 	.globl _TEXT2
                                     27 	.globl _TEXT1
                                     28 	.globl _LINE2
                                     29 	.globl _LINE1
                                     30 	.globl _INIT_COMMANDS
                                     31 	.globl _main
                                     32 	.globl _SHORT2
                                     33 	.globl _OPEN2
                                     34 	.globl _FIRE2
                                     35 	.globl _SHORT1
                                     36 	.globl _OPEN1
                                     37 	.globl _FIRE1
                                     38 	.globl _CFTLR
                                     39 	.globl _CFLR
                                     40 	.globl _BUZ
                                     41 	.globl _HOT
                                     42 	.globl _EN
                                     43 	.globl _RS
                                     44 	.globl _EVQ
                                     45 	.globl _SIL
                                     46 	.globl _LAMP
                                     47 	.globl _LB
                                     48 	.globl _BL
                                     49 	.globl _ZONE2
                                     50 	.globl _ZONE1
                                     51 	.globl _TF2
                                     52 	.globl _EXF2
                                     53 	.globl _RCLK
                                     54 	.globl _TCLK
                                     55 	.globl _EXEN2
                                     56 	.globl _TR2
                                     57 	.globl _C_T2
                                     58 	.globl _CP_RL2
                                     59 	.globl _T2CON_7
                                     60 	.globl _T2CON_6
                                     61 	.globl _T2CON_5
                                     62 	.globl _T2CON_4
                                     63 	.globl _T2CON_3
                                     64 	.globl _T2CON_2
                                     65 	.globl _T2CON_1
                                     66 	.globl _T2CON_0
                                     67 	.globl _PT2
                                     68 	.globl _ET2
                                     69 	.globl _CY
                                     70 	.globl _AC
                                     71 	.globl _F0
                                     72 	.globl _RS1
                                     73 	.globl _RS0
                                     74 	.globl _OV
                                     75 	.globl _F1
                                     76 	.globl _P
                                     77 	.globl _PS
                                     78 	.globl _PT1
                                     79 	.globl _PX1
                                     80 	.globl _PT0
                                     81 	.globl _PX0
                                     82 	.globl _RD
                                     83 	.globl _WR
                                     84 	.globl _T1
                                     85 	.globl _T0
                                     86 	.globl _INT1
                                     87 	.globl _INT0
                                     88 	.globl _TXD
                                     89 	.globl _RXD
                                     90 	.globl _P3_7
                                     91 	.globl _P3_6
                                     92 	.globl _P3_5
                                     93 	.globl _P3_4
                                     94 	.globl _P3_3
                                     95 	.globl _P3_2
                                     96 	.globl _P3_1
                                     97 	.globl _P3_0
                                     98 	.globl _EA
                                     99 	.globl _ES
                                    100 	.globl _ET1
                                    101 	.globl _EX1
                                    102 	.globl _ET0
                                    103 	.globl _EX0
                                    104 	.globl _P2_7
                                    105 	.globl _P2_6
                                    106 	.globl _P2_5
                                    107 	.globl _P2_4
                                    108 	.globl _P2_3
                                    109 	.globl _P2_2
                                    110 	.globl _P2_1
                                    111 	.globl _P2_0
                                    112 	.globl _SM0
                                    113 	.globl _SM1
                                    114 	.globl _SM2
                                    115 	.globl _REN
                                    116 	.globl _TB8
                                    117 	.globl _RB8
                                    118 	.globl _TI
                                    119 	.globl _RI
                                    120 	.globl _P1_7
                                    121 	.globl _P1_6
                                    122 	.globl _P1_5
                                    123 	.globl _P1_4
                                    124 	.globl _P1_3
                                    125 	.globl _P1_2
                                    126 	.globl _P1_1
                                    127 	.globl _P1_0
                                    128 	.globl _TF1
                                    129 	.globl _TR1
                                    130 	.globl _TF0
                                    131 	.globl _TR0
                                    132 	.globl _IE1
                                    133 	.globl _IT1
                                    134 	.globl _IE0
                                    135 	.globl _IT0
                                    136 	.globl _P0_7
                                    137 	.globl _P0_6
                                    138 	.globl _P0_5
                                    139 	.globl _P0_4
                                    140 	.globl _P0_3
                                    141 	.globl _P0_2
                                    142 	.globl _P0_1
                                    143 	.globl _P0_0
                                    144 	.globl _TH2
                                    145 	.globl _TL2
                                    146 	.globl _RCAP2H
                                    147 	.globl _RCAP2L
                                    148 	.globl _T2CON
                                    149 	.globl _B
                                    150 	.globl _ACC
                                    151 	.globl _PSW
                                    152 	.globl _IP
                                    153 	.globl _P3
                                    154 	.globl _IE
                                    155 	.globl _P2
                                    156 	.globl _SBUF
                                    157 	.globl _SCON
                                    158 	.globl _P1
                                    159 	.globl _TH1
                                    160 	.globl _TH0
                                    161 	.globl _TL1
                                    162 	.globl _TL0
                                    163 	.globl _TMOD
                                    164 	.globl _TCON
                                    165 	.globl _PCON
                                    166 	.globl _DPH
                                    167 	.globl _DPL
                                    168 	.globl _SP
                                    169 	.globl _P0
                                    170 	.globl _PR2
                                    171 	.globl _PR1
                                    172 	.globl _LISO
                                    173 	.globl _SLC2
                                    174 	.globl _SLC1
                                    175 	.globl _Z2
                                    176 	.globl _Z1
                                    177 	.globl _L
                                    178 	.globl _U
                                    179 	.globl _RAP
                                    180 	.globl _BLT1
                                    181 	.globl _init_system
                                    182 	.globl _prz1
                                    183 	.globl _prz2
                                    184 	.globl _receive
                                    185 	.globl _send_data
                                    186 	.globl _silence_alarms
                                    187 	.globl _spliter
                                    188 	.globl _move
                                    189 	.globl _move1
                                    190 	.globl _lcd_cmd
                                    191 	.globl _lcd_data
                                    192 	.globl _lcd_disp
                                    193 	.globl _lcd_disp1
                                    194 	.globl _delay2
                                    195 	.globl _delay1
                                    196 	.globl _delay
                                    197 ;--------------------------------------------------------
                                    198 ; special function registers
                                    199 ;--------------------------------------------------------
                                    200 	.area RSEG    (ABS,DATA)
      000000                        201 	.org 0x0000
                           000080   202 _P0	=	0x0080
                           000081   203 _SP	=	0x0081
                           000082   204 _DPL	=	0x0082
                           000083   205 _DPH	=	0x0083
                           000087   206 _PCON	=	0x0087
                           000088   207 _TCON	=	0x0088
                           000089   208 _TMOD	=	0x0089
                           00008A   209 _TL0	=	0x008a
                           00008B   210 _TL1	=	0x008b
                           00008C   211 _TH0	=	0x008c
                           00008D   212 _TH1	=	0x008d
                           000090   213 _P1	=	0x0090
                           000098   214 _SCON	=	0x0098
                           000099   215 _SBUF	=	0x0099
                           0000A0   216 _P2	=	0x00a0
                           0000A8   217 _IE	=	0x00a8
                           0000B0   218 _P3	=	0x00b0
                           0000B8   219 _IP	=	0x00b8
                           0000D0   220 _PSW	=	0x00d0
                           0000E0   221 _ACC	=	0x00e0
                           0000F0   222 _B	=	0x00f0
                           0000C8   223 _T2CON	=	0x00c8
                           0000CA   224 _RCAP2L	=	0x00ca
                           0000CB   225 _RCAP2H	=	0x00cb
                           0000CC   226 _TL2	=	0x00cc
                           0000CD   227 _TH2	=	0x00cd
                                    228 ;--------------------------------------------------------
                                    229 ; special function bits
                                    230 ;--------------------------------------------------------
                                    231 	.area RSEG    (ABS,DATA)
      000000                        232 	.org 0x0000
                           000080   233 _P0_0	=	0x0080
                           000081   234 _P0_1	=	0x0081
                           000082   235 _P0_2	=	0x0082
                           000083   236 _P0_3	=	0x0083
                           000084   237 _P0_4	=	0x0084
                           000085   238 _P0_5	=	0x0085
                           000086   239 _P0_6	=	0x0086
                           000087   240 _P0_7	=	0x0087
                           000088   241 _IT0	=	0x0088
                           000089   242 _IE0	=	0x0089
                           00008A   243 _IT1	=	0x008a
                           00008B   244 _IE1	=	0x008b
                           00008C   245 _TR0	=	0x008c
                           00008D   246 _TF0	=	0x008d
                           00008E   247 _TR1	=	0x008e
                           00008F   248 _TF1	=	0x008f
                           000090   249 _P1_0	=	0x0090
                           000091   250 _P1_1	=	0x0091
                           000092   251 _P1_2	=	0x0092
                           000093   252 _P1_3	=	0x0093
                           000094   253 _P1_4	=	0x0094
                           000095   254 _P1_5	=	0x0095
                           000096   255 _P1_6	=	0x0096
                           000097   256 _P1_7	=	0x0097
                           000098   257 _RI	=	0x0098
                           000099   258 _TI	=	0x0099
                           00009A   259 _RB8	=	0x009a
                           00009B   260 _TB8	=	0x009b
                           00009C   261 _REN	=	0x009c
                           00009D   262 _SM2	=	0x009d
                           00009E   263 _SM1	=	0x009e
                           00009F   264 _SM0	=	0x009f
                           0000A0   265 _P2_0	=	0x00a0
                           0000A1   266 _P2_1	=	0x00a1
                           0000A2   267 _P2_2	=	0x00a2
                           0000A3   268 _P2_3	=	0x00a3
                           0000A4   269 _P2_4	=	0x00a4
                           0000A5   270 _P2_5	=	0x00a5
                           0000A6   271 _P2_6	=	0x00a6
                           0000A7   272 _P2_7	=	0x00a7
                           0000A8   273 _EX0	=	0x00a8
                           0000A9   274 _ET0	=	0x00a9
                           0000AA   275 _EX1	=	0x00aa
                           0000AB   276 _ET1	=	0x00ab
                           0000AC   277 _ES	=	0x00ac
                           0000AF   278 _EA	=	0x00af
                           0000B0   279 _P3_0	=	0x00b0
                           0000B1   280 _P3_1	=	0x00b1
                           0000B2   281 _P3_2	=	0x00b2
                           0000B3   282 _P3_3	=	0x00b3
                           0000B4   283 _P3_4	=	0x00b4
                           0000B5   284 _P3_5	=	0x00b5
                           0000B6   285 _P3_6	=	0x00b6
                           0000B7   286 _P3_7	=	0x00b7
                           0000B0   287 _RXD	=	0x00b0
                           0000B1   288 _TXD	=	0x00b1
                           0000B2   289 _INT0	=	0x00b2
                           0000B3   290 _INT1	=	0x00b3
                           0000B4   291 _T0	=	0x00b4
                           0000B5   292 _T1	=	0x00b5
                           0000B6   293 _WR	=	0x00b6
                           0000B7   294 _RD	=	0x00b7
                           0000B8   295 _PX0	=	0x00b8
                           0000B9   296 _PT0	=	0x00b9
                           0000BA   297 _PX1	=	0x00ba
                           0000BB   298 _PT1	=	0x00bb
                           0000BC   299 _PS	=	0x00bc
                           0000D0   300 _P	=	0x00d0
                           0000D1   301 _F1	=	0x00d1
                           0000D2   302 _OV	=	0x00d2
                           0000D3   303 _RS0	=	0x00d3
                           0000D4   304 _RS1	=	0x00d4
                           0000D5   305 _F0	=	0x00d5
                           0000D6   306 _AC	=	0x00d6
                           0000D7   307 _CY	=	0x00d7
                           0000AD   308 _ET2	=	0x00ad
                           0000BD   309 _PT2	=	0x00bd
                           0000C8   310 _T2CON_0	=	0x00c8
                           0000C9   311 _T2CON_1	=	0x00c9
                           0000CA   312 _T2CON_2	=	0x00ca
                           0000CB   313 _T2CON_3	=	0x00cb
                           0000CC   314 _T2CON_4	=	0x00cc
                           0000CD   315 _T2CON_5	=	0x00cd
                           0000CE   316 _T2CON_6	=	0x00ce
                           0000CF   317 _T2CON_7	=	0x00cf
                           0000C8   318 _CP_RL2	=	0x00c8
                           0000C9   319 _C_T2	=	0x00c9
                           0000CA   320 _TR2	=	0x00ca
                           0000CB   321 _EXEN2	=	0x00cb
                           0000CC   322 _TCLK	=	0x00cc
                           0000CD   323 _RCLK	=	0x00cd
                           0000CE   324 _EXF2	=	0x00ce
                           0000CF   325 _TF2	=	0x00cf
                           0000A4   326 _ZONE1	=	0x00a4
                           0000A5   327 _ZONE2	=	0x00a5
                           0000A7   328 _BL	=	0x00a7
                           0000A2   329 _LB	=	0x00a2
                           0000A6   330 _LAMP	=	0x00a6
                           0000A0   331 _SIL	=	0x00a0
                           0000A1   332 _EVQ	=	0x00a1
                           000086   333 _RS	=	0x0086
                           000087   334 _EN	=	0x0087
                           000094   335 _HOT	=	0x0094
                           000095   336 _BUZ	=	0x0095
                           000096   337 _CFLR	=	0x0096
                           000097   338 _CFTLR	=	0x0097
                           000080   339 _FIRE1	=	0x0080
                           000081   340 _OPEN1	=	0x0081
                           000082   341 _SHORT1	=	0x0082
                           000083   342 _FIRE2	=	0x0083
                           000084   343 _OPEN2	=	0x0084
                           000085   344 _SHORT2	=	0x0085
                                    345 ;--------------------------------------------------------
                                    346 ; overlayable register banks
                                    347 ;--------------------------------------------------------
                                    348 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        349 	.ds 8
                                    350 ;--------------------------------------------------------
                                    351 ; internal ram data
                                    352 ;--------------------------------------------------------
                                    353 	.area DSEG    (DATA)
      000000                        354 _BLT1::
      000000                        355 	.ds 1
      000001                        356 _RAP::
      000001                        357 	.ds 1
      000002                        358 _U::
      000002                        359 	.ds 1
      000003                        360 _L::
      000003                        361 	.ds 1
                                    362 ;--------------------------------------------------------
                                    363 ; overlayable items in internal ram
                                    364 ;--------------------------------------------------------
                                    365 	.area	OSEG    (OVR,DATA)
                                    366 	.area	OSEG    (OVR,DATA)
                                    367 	.area	OSEG    (OVR,DATA)
                                    368 	.area	OSEG    (OVR,DATA)
                                    369 	.area	OSEG    (OVR,DATA)
                                    370 ;--------------------------------------------------------
                                    371 ; Stack segment in internal ram
                                    372 ;--------------------------------------------------------
                                    373 	.area SSEG
      000000                        374 __start__stack:
      000000                        375 	.ds	1
                                    376 
                                    377 ;--------------------------------------------------------
                                    378 ; indirectly addressable internal ram data
                                    379 ;--------------------------------------------------------
                                    380 	.area ISEG    (DATA)
                                    381 ;--------------------------------------------------------
                                    382 ; absolute internal ram data
                                    383 ;--------------------------------------------------------
                                    384 	.area IABS    (ABS,DATA)
                                    385 	.area IABS    (ABS,DATA)
                                    386 ;--------------------------------------------------------
                                    387 ; bit data
                                    388 ;--------------------------------------------------------
                                    389 	.area BSEG    (BIT)
      000000                        390 _Z1::
      000000                        391 	.ds 1
      000001                        392 _Z2::
      000001                        393 	.ds 1
      000002                        394 _SLC1::
      000002                        395 	.ds 1
      000003                        396 _SLC2::
      000003                        397 	.ds 1
      000004                        398 _LISO::
      000004                        399 	.ds 1
      000005                        400 _PR1::
      000005                        401 	.ds 1
      000006                        402 _PR2::
      000006                        403 	.ds 1
                                    404 ;--------------------------------------------------------
                                    405 ; paged external ram data
                                    406 ;--------------------------------------------------------
                                    407 	.area PSEG    (PAG,XDATA)
                                    408 ;--------------------------------------------------------
                                    409 ; uninitialized external ram data
                                    410 ;--------------------------------------------------------
                                    411 	.area XSEG    (XDATA)
                                    412 ;--------------------------------------------------------
                                    413 ; absolute external ram data
                                    414 ;--------------------------------------------------------
                                    415 	.area XABS    (ABS,XDATA)
                                    416 ;--------------------------------------------------------
                                    417 ; initialized external ram data
                                    418 ;--------------------------------------------------------
                                    419 	.area XISEG   (XDATA)
                                    420 	.area HOME    (CODE)
                                    421 	.area GSINIT0 (CODE)
                                    422 	.area GSINIT1 (CODE)
                                    423 	.area GSINIT2 (CODE)
                                    424 	.area GSINIT3 (CODE)
                                    425 	.area GSINIT4 (CODE)
                                    426 	.area GSINIT5 (CODE)
                                    427 	.area GSINIT  (CODE)
                                    428 	.area GSFINAL (CODE)
                                    429 	.area CSEG    (CODE)
                                    430 ;--------------------------------------------------------
                                    431 ; interrupt vector
                                    432 ;--------------------------------------------------------
                                    433 	.area HOME    (CODE)
      000000                        434 __interrupt_vect:
      000000 02r00r00         [24]  435 	ljmp	__sdcc_gsinit_startup
                                    436 ; restartable atomic support routines
      000003                        437 	.ds	5
      000008                        438 sdcc_atomic_exchange_rollback_start::
      000008 00               [12]  439 	nop
      000009 00               [12]  440 	nop
      00000A                        441 sdcc_atomic_exchange_pdata_impl:
      00000A E2               [24]  442 	movx	a, @r0
      00000B FB               [12]  443 	mov	r3, a
      00000C EA               [12]  444 	mov	a, r2
      00000D F2               [24]  445 	movx	@r0, a
      00000E 80 2C            [24]  446 	sjmp	sdcc_atomic_exchange_exit
      000010 00               [12]  447 	nop
      000011 00               [12]  448 	nop
      000012                        449 sdcc_atomic_exchange_xdata_impl:
      000012 E0               [24]  450 	movx	a, @dptr
      000013 FB               [12]  451 	mov	r3, a
      000014 EA               [12]  452 	mov	a, r2
      000015 F0               [24]  453 	movx	@dptr, a
      000016 80 24            [24]  454 	sjmp	sdcc_atomic_exchange_exit
      000018                        455 sdcc_atomic_compare_exchange_idata_impl:
      000018 E6               [12]  456 	mov	a, @r0
      000019 B5 02 02         [24]  457 	cjne	a, ar2, .+#5
      00001C EB               [12]  458 	mov	a, r3
      00001D F6               [12]  459 	mov	@r0, a
      00001E 22               [24]  460 	ret
      00001F 00               [12]  461 	nop
      000020                        462 sdcc_atomic_compare_exchange_pdata_impl:
      000020 E2               [24]  463 	movx	a, @r0
      000021 B5 02 02         [24]  464 	cjne	a, ar2, .+#5
      000024 EB               [12]  465 	mov	a, r3
      000025 F2               [24]  466 	movx	@r0, a
      000026 22               [24]  467 	ret
      000027 00               [12]  468 	nop
      000028                        469 sdcc_atomic_compare_exchange_xdata_impl:
      000028 E0               [24]  470 	movx	a, @dptr
      000029 B5 02 02         [24]  471 	cjne	a, ar2, .+#5
      00002C EB               [12]  472 	mov	a, r3
      00002D F0               [24]  473 	movx	@dptr, a
      00002E 22               [24]  474 	ret
      00002F                        475 sdcc_atomic_exchange_rollback_end::
                                    476 
      00002F                        477 sdcc_atomic_exchange_gptr_impl::
      00002F 30 F6 E0         [24]  478 	jnb	b.6, sdcc_atomic_exchange_xdata_impl
      000032 A8 82            [24]  479 	mov	r0, dpl
      000034 20 F5 D3         [24]  480 	jb	b.5, sdcc_atomic_exchange_pdata_impl
      000037                        481 sdcc_atomic_exchange_idata_impl:
      000037 EA               [12]  482 	mov	a, r2
      000038 C6               [12]  483 	xch	a, @r0
      000039 F5 82            [12]  484 	mov	dpl, a
      00003B 22               [24]  485 	ret
      00003C                        486 sdcc_atomic_exchange_exit:
      00003C 8B 82            [24]  487 	mov	dpl, r3
      00003E 22               [24]  488 	ret
      00003F                        489 sdcc_atomic_compare_exchange_gptr_impl::
      00003F 30 F6 E6         [24]  490 	jnb	b.6, sdcc_atomic_compare_exchange_xdata_impl
      000042 A8 82            [24]  491 	mov	r0, dpl
      000044 20 F5 D9         [24]  492 	jb	b.5, sdcc_atomic_compare_exchange_pdata_impl
      000047 80 CF            [24]  493 	sjmp	sdcc_atomic_compare_exchange_idata_impl
                                    494 ;--------------------------------------------------------
                                    495 ; global & static initialisations
                                    496 ;--------------------------------------------------------
                                    497 	.area HOME    (CODE)
                                    498 	.area GSINIT  (CODE)
                                    499 	.area GSFINAL (CODE)
                                    500 	.area GSINIT  (CODE)
                                    501 	.globl __sdcc_gsinit_startup
                                    502 	.globl __sdcc_program_startup
                                    503 	.globl __start__stack
                                    504 	.globl __mcs51_genXINIT
                                    505 	.globl __mcs51_genXRAMCLEAR
                                    506 	.globl __mcs51_genRAMCLEAR
                                    507 ;	fire_alarm_panel.c:28: __bit Z1 = 0;          // ISO Zone 1
                                    508 ;	assignBit
      000000 C2*00            [12]  509 	clr	_Z1
                                    510 ;	fire_alarm_panel.c:29: __bit Z2 = 0;          // ISO Zone 2
                                    511 ;	assignBit
      000002 C2*01            [12]  512 	clr	_Z2
                                    513 ;	fire_alarm_panel.c:30: __bit SLC1 = 0;        // Silence Zone 1
                                    514 ;	assignBit
      000004 C2*02            [12]  515 	clr	_SLC1
                                    516 ;	fire_alarm_panel.c:31: __bit SLC2 = 0;        // Silence Zone 2
                                    517 ;	assignBit
      000006 C2*03            [12]  518 	clr	_SLC2
                                    519 ;	fire_alarm_panel.c:32: __bit LISO = 0;        // Low battery silence
                                    520 ;	assignBit
      000008 C2*04            [12]  521 	clr	_LISO
                                    522 ;	fire_alarm_panel.c:33: __bit PR1 = 0;         // Zone 1 Problem
                                    523 ;	assignBit
      00000A C2*05            [12]  524 	clr	_PR1
                                    525 ;	fire_alarm_panel.c:34: __bit PR2 = 0;         // Zone 2 Problem
                                    526 ;	assignBit
      00000C C2*06            [12]  527 	clr	_PR2
                                    528 	.area GSFINAL (CODE)
      000000 02r00r49         [24]  529 	ljmp	__sdcc_program_startup
                                    530 ;--------------------------------------------------------
                                    531 ; Home
                                    532 ;--------------------------------------------------------
                                    533 	.area HOME    (CODE)
                                    534 	.area HOME    (CODE)
      000049                        535 __sdcc_program_startup:
      000049 02r00r00         [24]  536 	ljmp	_main
                                    537 ;	return from main will return to caller
                                    538 ;--------------------------------------------------------
                                    539 ; code
                                    540 ;--------------------------------------------------------
                                    541 	.area CSEG    (CODE)
                                    542 ;------------------------------------------------------------
                                    543 ;Allocation info for local variables in function 'main'
                                    544 ;------------------------------------------------------------
                                    545 ;R0            Allocated to registers r7 
                                    546 ;------------------------------------------------------------
                                    547 ;	fire_alarm_panel.c:83: void main(void)
                                    548 ;	-----------------------------------------
                                    549 ;	 function main
                                    550 ;	-----------------------------------------
      000000                        551 _main:
                           000007   552 	ar7 = 0x07
                           000006   553 	ar6 = 0x06
                           000005   554 	ar5 = 0x05
                           000004   555 	ar4 = 0x04
                           000003   556 	ar3 = 0x03
                           000002   557 	ar2 = 0x02
                           000001   558 	ar1 = 0x01
                           000000   559 	ar0 = 0x00
                                    560 ;	fire_alarm_panel.c:87: init_system();
      000000 12r02rB1         [24]  561 	lcall	_init_system
                                    562 ;	fire_alarm_panel.c:91: while(R0 < 15) {
      000003 7F 00            [12]  563 	mov	r7,#0x00
      000005                        564 00101$:
      000005 BF 0F 00         [24]  565 	cjne	r7,#0x0f,00492$
      000008                        566 00492$:
      000008 50 13            [24]  567 	jnc	00103$
                                    568 ;	fire_alarm_panel.c:92: lcd_cmd(INIT_COMMANDS);
      00000A 90r00r00         [24]  569 	mov	dptr,#_INIT_COMMANDS
      00000D 75 F0 80         [24]  570 	mov	b, #0x80
      000010 C0 07            [24]  571 	push	ar7
      000012 12r05r42         [24]  572 	lcall	_lcd_cmd
                                    573 ;	fire_alarm_panel.c:93: delay();
      000015 12r06r23         [24]  574 	lcall	_delay
      000018 D0 07            [24]  575 	pop	ar7
                                    576 ;	fire_alarm_panel.c:94: R0++;
      00001A 0F               [12]  577 	inc	r7
      00001B 80 E8            [24]  578 	sjmp	00101$
      00001D                        579 00103$:
                                    580 ;	fire_alarm_panel.c:98: lcd_cmd(LINE1);
      00001D 90r00r07         [24]  581 	mov	dptr,#_LINE1
      000020 75 F0 80         [24]  582 	mov	b, #0x80
      000023 12r05r42         [24]  583 	lcall	_lcd_cmd
                                    584 ;	fire_alarm_panel.c:99: lcd_disp(TEXT2);
      000026 90r00r1E         [24]  585 	mov	dptr,#_TEXT2
      000029 75 F0 80         [24]  586 	mov	b, #0x80
      00002C 12r05r96         [24]  587 	lcall	_lcd_disp
                                    588 ;	fire_alarm_panel.c:100: delay();
      00002F 12r06r23         [24]  589 	lcall	_delay
                                    590 ;	fire_alarm_panel.c:101: lcd_cmd(LINE2);
      000032 90r00r0B         [24]  591 	mov	dptr,#_LINE2
      000035 75 F0 80         [24]  592 	mov	b, #0x80
      000038 12r05r42         [24]  593 	lcall	_lcd_cmd
                                    594 ;	fire_alarm_panel.c:102: lcd_disp1(TEXT1);
      00003B 90r00r0D         [24]  595 	mov	dptr,#_TEXT1
      00003E 75 F0 80         [24]  596 	mov	b, #0x80
      000041 12r05rCB         [24]  597 	lcall	_lcd_disp1
                                    598 ;	fire_alarm_panel.c:104: while(1) {
      000044                        599 00193$:
                                    600 ;	fire_alarm_panel.c:106: if(RI) {
      000044 30 98 03         [24]  601 	jnb	_RI,00105$
                                    602 ;	fire_alarm_panel.c:107: receive();
      000047 12r04r5F         [24]  603 	lcall	_receive
      00004A                        604 00105$:
                                    605 ;	fire_alarm_panel.c:111: lcd_cmd(LINE1);
      00004A 90r00r07         [24]  606 	mov	dptr,#_LINE1
      00004D 75 F0 80         [24]  607 	mov	b, #0x80
      000050 12r05r42         [24]  608 	lcall	_lcd_cmd
                                    609 ;	fire_alarm_panel.c:112: lcd_disp(TEXT1);
      000053 90r00r0D         [24]  610 	mov	dptr,#_TEXT1
      000056 75 F0 80         [24]  611 	mov	b, #0x80
      000059 12r05r96         [24]  612 	lcall	_lcd_disp
                                    613 ;	fire_alarm_panel.c:114: if(RI) {
      00005C 30 98 03         [24]  614 	jnb	_RI,00107$
                                    615 ;	fire_alarm_panel.c:115: receive();
      00005F 12r04r5F         [24]  616 	lcall	_receive
      000062                        617 00107$:
                                    618 ;	fire_alarm_panel.c:119: if(!ZONE1) {
      000062 20 A4 1F         [24]  619 	jb	_ZONE1,00111$
                                    620 ;	fire_alarm_panel.c:120: Z1 = 1; // Mark as isolated
                                    621 ;	assignBit
      000065 D2*00            [12]  622 	setb	_Z1
                                    623 ;	fire_alarm_panel.c:121: lcd_cmd(LINE2);
      000067 90r00r0B         [24]  624 	mov	dptr,#_LINE2
      00006A 75 F0 80         [24]  625 	mov	b, #0x80
      00006D 12r05r42         [24]  626 	lcall	_lcd_cmd
                                    627 ;	fire_alarm_panel.c:122: lcd_disp(ISO1);
      000070 90r00rC8         [24]  628 	mov	dptr,#_ISO1
      000073 75 F0 80         [24]  629 	mov	b, #0x80
      000076 12r05r96         [24]  630 	lcall	_lcd_disp
                                    631 ;	fire_alarm_panel.c:123: delay1();
      000079 12r06r10         [24]  632 	lcall	_delay1
                                    633 ;	fire_alarm_panel.c:124: if(RI) receive();
      00007C 30 98 07         [24]  634 	jnb	_RI,00112$
      00007F 12r04r5F         [24]  635 	lcall	_receive
      000082 80 02            [24]  636 	sjmp	00112$
      000084                        637 00111$:
                                    638 ;	fire_alarm_panel.c:126: Z1 = 0; // Not isolated
                                    639 ;	assignBit
      000084 C2*00            [12]  640 	clr	_Z1
      000086                        641 00112$:
                                    642 ;	fire_alarm_panel.c:130: if(!ZONE2) {
      000086 20 A5 1F         [24]  643 	jb	_ZONE2,00116$
                                    644 ;	fire_alarm_panel.c:131: Z2 = 1; // Mark as isolated
                                    645 ;	assignBit
      000089 D2*01            [12]  646 	setb	_Z2
                                    647 ;	fire_alarm_panel.c:132: lcd_cmd(LINE2);
      00008B 90r00r0B         [24]  648 	mov	dptr,#_LINE2
      00008E 75 F0 80         [24]  649 	mov	b, #0x80
      000091 12r05r42         [24]  650 	lcall	_lcd_cmd
                                    651 ;	fire_alarm_panel.c:133: lcd_disp(ISO2);
      000094 90r00rD9         [24]  652 	mov	dptr,#_ISO2
      000097 75 F0 80         [24]  653 	mov	b, #0x80
      00009A 12r05r96         [24]  654 	lcall	_lcd_disp
                                    655 ;	fire_alarm_panel.c:134: delay1();
      00009D 12r06r10         [24]  656 	lcall	_delay1
                                    657 ;	fire_alarm_panel.c:135: if(RI) receive();
      0000A0 30 98 07         [24]  658 	jnb	_RI,00117$
      0000A3 12r04r5F         [24]  659 	lcall	_receive
      0000A6 80 02            [24]  660 	sjmp	00117$
      0000A8                        661 00116$:
                                    662 ;	fire_alarm_panel.c:137: Z2 = 0; // Not isolated
                                    663 ;	assignBit
      0000A8 C2*01            [12]  664 	clr	_Z2
      0000AA                        665 00117$:
                                    666 ;	fire_alarm_panel.c:141: if(Z1 && Z2) {
      0000AA 30*00 1E         [24]  667 	jnb	_Z1,00121$
      0000AD 30*01 1B         [24]  668 	jnb	_Z2,00121$
                                    669 ;	fire_alarm_panel.c:142: lcd_cmd(LINE2);
      0000B0 90r00r0B         [24]  670 	mov	dptr,#_LINE2
      0000B3 75 F0 80         [24]  671 	mov	b, #0x80
      0000B6 12r05r42         [24]  672 	lcall	_lcd_cmd
                                    673 ;	fire_alarm_panel.c:143: lcd_disp(TEXT3);
      0000B9 90r00r2F         [24]  674 	mov	dptr,#_TEXT3
      0000BC 75 F0 80         [24]  675 	mov	b, #0x80
      0000BF 12r05r96         [24]  676 	lcall	_lcd_disp
                                    677 ;	fire_alarm_panel.c:144: delay1();
      0000C2 12r06r10         [24]  678 	lcall	_delay1
                                    679 ;	fire_alarm_panel.c:145: if(RI) receive();
      0000C5 30 98 03         [24]  680 	jnb	_RI,00121$
      0000C8 12r04r5F         [24]  681 	lcall	_receive
      0000CB                        682 00121$:
                                    683 ;	fire_alarm_panel.c:149: if(ZONE1) {
      0000CB 30 A4 1E         [24]  684 	jnb	_ZONE1,00135$
                                    685 ;	fire_alarm_panel.c:151: if(FIRE1 && OPEN1 && SHORT1) {
      0000CE 30 80 0C         [24]  686 	jnb	_FIRE1,00126$
      0000D1 30 81 09         [24]  687 	jnb	_OPEN1,00126$
      0000D4 30 82 06         [24]  688 	jnb	_SHORT1,00126$
                                    689 ;	fire_alarm_panel.c:153: PR1 = 0;
                                    690 ;	assignBit
      0000D7 C2*05            [12]  691 	clr	_PR1
                                    692 ;	fire_alarm_panel.c:154: SLC1 = 0;
                                    693 ;	assignBit
      0000D9 C2*02            [12]  694 	clr	_SLC1
      0000DB 80 2F            [24]  695 	sjmp	00136$
      0000DD                        696 00126$:
                                    697 ;	fire_alarm_panel.c:157: PR1 = 1;
                                    698 ;	assignBit
      0000DD D2*05            [12]  699 	setb	_PR1
                                    700 ;	fire_alarm_panel.c:158: BL = 1;
                                    701 ;	assignBit
      0000DF D2 A7            [12]  702 	setb	_BL
                                    703 ;	fire_alarm_panel.c:159: prz1();
      0000E1 12r02rDD         [24]  704 	lcall	_prz1
                                    705 ;	fire_alarm_panel.c:160: if(RI) receive();
      0000E4 30 98 25         [24]  706 	jnb	_RI,00136$
      0000E7 12r04r5F         [24]  707 	lcall	_receive
      0000EA 80 20            [24]  708 	sjmp	00136$
      0000EC                        709 00135$:
                                    710 ;	fire_alarm_panel.c:164: PR1 = 0;
                                    711 ;	assignBit
      0000EC C2*05            [12]  712 	clr	_PR1
                                    713 ;	fire_alarm_panel.c:166: if(!PR2) {
      0000EE 20*06 1B         [24]  714 	jb	_PR2,00136$
                                    715 ;	fire_alarm_panel.c:167: lcd_cmd(LINE2);
      0000F1 90r00r0B         [24]  716 	mov	dptr,#_LINE2
      0000F4 75 F0 80         [24]  717 	mov	b, #0x80
      0000F7 12r05r42         [24]  718 	lcall	_lcd_cmd
                                    719 ;	fire_alarm_panel.c:168: lcd_disp(ISO1H);
      0000FA 90r00rEA         [24]  720 	mov	dptr,#_ISO1H
      0000FD 75 F0 80         [24]  721 	mov	b, #0x80
      000100 12r05r96         [24]  722 	lcall	_lcd_disp
                                    723 ;	fire_alarm_panel.c:169: delay1();
      000103 12r06r10         [24]  724 	lcall	_delay1
                                    725 ;	fire_alarm_panel.c:170: if(RI) receive();
      000106 30 98 03         [24]  726 	jnb	_RI,00136$
      000109 12r04r5F         [24]  727 	lcall	_receive
      00010C                        728 00136$:
                                    729 ;	fire_alarm_panel.c:175: if(ZONE2) {
      00010C 30 A5 1E         [24]  730 	jnb	_ZONE2,00149$
                                    731 ;	fire_alarm_panel.c:177: if(FIRE2 && OPEN2 && SHORT2) {
      00010F 30 83 0C         [24]  732 	jnb	_FIRE2,00140$
      000112 30 84 09         [24]  733 	jnb	_OPEN2,00140$
      000115 30 85 06         [24]  734 	jnb	_SHORT2,00140$
                                    735 ;	fire_alarm_panel.c:179: PR2 = 0;
                                    736 ;	assignBit
      000118 C2*06            [12]  737 	clr	_PR2
                                    738 ;	fire_alarm_panel.c:180: SLC2 = 0;
                                    739 ;	assignBit
      00011A C2*03            [12]  740 	clr	_SLC2
      00011C 80 2F            [24]  741 	sjmp	00150$
      00011E                        742 00140$:
                                    743 ;	fire_alarm_panel.c:183: PR2 = 1;
                                    744 ;	assignBit
      00011E D2*06            [12]  745 	setb	_PR2
                                    746 ;	fire_alarm_panel.c:184: BL = 1;
                                    747 ;	assignBit
      000120 D2 A7            [12]  748 	setb	_BL
                                    749 ;	fire_alarm_panel.c:185: prz2();
      000122 12r03r9E         [24]  750 	lcall	_prz2
                                    751 ;	fire_alarm_panel.c:186: if(RI) receive();
      000125 30 98 25         [24]  752 	jnb	_RI,00150$
      000128 12r04r5F         [24]  753 	lcall	_receive
      00012B 80 20            [24]  754 	sjmp	00150$
      00012D                        755 00149$:
                                    756 ;	fire_alarm_panel.c:190: PR2 = 0;
                                    757 ;	assignBit
      00012D C2*06            [12]  758 	clr	_PR2
                                    759 ;	fire_alarm_panel.c:192: if(!PR1) {
      00012F 20*05 1B         [24]  760 	jb	_PR1,00150$
                                    761 ;	fire_alarm_panel.c:193: lcd_cmd(LINE2);
      000132 90r00r0B         [24]  762 	mov	dptr,#_LINE2
      000135 75 F0 80         [24]  763 	mov	b, #0x80
      000138 12r05r42         [24]  764 	lcall	_lcd_cmd
                                    765 ;	fire_alarm_panel.c:194: lcd_disp(ISO2H);
      00013B 90r00rFB         [24]  766 	mov	dptr,#_ISO2H
      00013E 75 F0 80         [24]  767 	mov	b, #0x80
      000141 12r05r96         [24]  768 	lcall	_lcd_disp
                                    769 ;	fire_alarm_panel.c:195: delay1();
      000144 12r06r10         [24]  770 	lcall	_delay1
                                    771 ;	fire_alarm_panel.c:196: if(RI) receive();
      000147 30 98 03         [24]  772 	jnb	_RI,00150$
      00014A 12r04r5F         [24]  773 	lcall	_receive
      00014D                        774 00150$:
                                    775 ;	fire_alarm_panel.c:201: if(!SIL) {
      00014D 20 A0 03         [24]  776 	jb	_SIL,00152$
                                    777 ;	fire_alarm_panel.c:202: silence_alarms();
      000150 12r04rFD         [24]  778 	lcall	_silence_alarms
      000153                        779 00152$:
                                    780 ;	fire_alarm_panel.c:206: if(RI) receive();
      000153 30 98 03         [24]  781 	jnb	_RI,00154$
      000156 12r04r5F         [24]  782 	lcall	_receive
      000159                        783 00154$:
                                    784 ;	fire_alarm_panel.c:208: if(!LAMP) { // Lamp test button pressed (active low)
      000159 20 A6 70         [24]  785 	jb	_LAMP,00161$
                                    786 ;	fire_alarm_panel.c:210: BL = 1;
                                    787 ;	assignBit
      00015C D2 A7            [12]  788 	setb	_BL
                                    789 ;	fire_alarm_panel.c:211: lcd_cmd(LINE1);
      00015E 90r00r07         [24]  790 	mov	dptr,#_LINE1
      000161 75 F0 80         [24]  791 	mov	b, #0x80
      000164 12r05r42         [24]  792 	lcall	_lcd_cmd
                                    793 ;	fire_alarm_panel.c:212: lcd_disp(TLAMP);
      000167 90r00rA6         [24]  794 	mov	dptr,#_TLAMP
      00016A 75 F0 80         [24]  795 	mov	b, #0x80
      00016D 12r05r96         [24]  796 	lcall	_lcd_disp
                                    797 ;	fire_alarm_panel.c:213: lcd_cmd(LINE2);
      000170 90r00r0B         [24]  798 	mov	dptr,#_LINE2
      000173 75 F0 80         [24]  799 	mov	b, #0x80
      000176 12r05r42         [24]  800 	lcall	_lcd_cmd
                                    801 ;	fire_alarm_panel.c:214: lcd_disp(TZONE1);
      000179 90r00r40         [24]  802 	mov	dptr,#_TZONE1
      00017C 75 F0 80         [24]  803 	mov	b, #0x80
      00017F 12r05r96         [24]  804 	lcall	_lcd_disp
                                    805 ;	fire_alarm_panel.c:215: delay1();
      000182 12r06r10         [24]  806 	lcall	_delay1
                                    807 ;	fire_alarm_panel.c:216: delay1();
      000185 12r06r10         [24]  808 	lcall	_delay1
                                    809 ;	fire_alarm_panel.c:219: CFLR = 1; CFTLR = 1; HOT = 1; BUZ = 1;
                                    810 ;	assignBit
      000188 D2 96            [12]  811 	setb	_CFLR
                                    812 ;	assignBit
      00018A D2 97            [12]  813 	setb	_CFTLR
                                    814 ;	assignBit
      00018C D2 94            [12]  815 	setb	_HOT
                                    816 ;	assignBit
      00018E D2 95            [12]  817 	setb	_BUZ
                                    818 ;	fire_alarm_panel.c:220: delay1();
      000190 12r06r10         [24]  819 	lcall	_delay1
                                    820 ;	fire_alarm_panel.c:221: CFLR = 0; CFTLR = 0; HOT = 0; BUZ = 0;
                                    821 ;	assignBit
      000193 C2 96            [12]  822 	clr	_CFLR
                                    823 ;	assignBit
      000195 C2 97            [12]  824 	clr	_CFTLR
                                    825 ;	assignBit
      000197 C2 94            [12]  826 	clr	_HOT
                                    827 ;	assignBit
      000199 C2 95            [12]  828 	clr	_BUZ
                                    829 ;	fire_alarm_panel.c:223: lcd_cmd(LINE2);
      00019B 90r00r0B         [24]  830 	mov	dptr,#_LINE2
      00019E 75 F0 80         [24]  831 	mov	b, #0x80
      0001A1 12r05r42         [24]  832 	lcall	_lcd_cmd
                                    833 ;	fire_alarm_panel.c:224: lcd_disp(TZONE2);
      0001A4 90r00r51         [24]  834 	mov	dptr,#_TZONE2
      0001A7 75 F0 80         [24]  835 	mov	b, #0x80
      0001AA 12r05r96         [24]  836 	lcall	_lcd_disp
                                    837 ;	fire_alarm_panel.c:225: delay1();
      0001AD 12r06r10         [24]  838 	lcall	_delay1
                                    839 ;	fire_alarm_panel.c:228: CFLR = 1; CFTLR = 1; HOT = 1; BUZ = 1;
                                    840 ;	assignBit
      0001B0 D2 96            [12]  841 	setb	_CFLR
                                    842 ;	assignBit
      0001B2 D2 97            [12]  843 	setb	_CFTLR
                                    844 ;	assignBit
      0001B4 D2 94            [12]  845 	setb	_HOT
                                    846 ;	assignBit
      0001B6 D2 95            [12]  847 	setb	_BUZ
                                    848 ;	fire_alarm_panel.c:229: delay1();
      0001B8 12r06r10         [24]  849 	lcall	_delay1
                                    850 ;	fire_alarm_panel.c:230: CFLR = 0; CFTLR = 0; HOT = 0; BUZ = 0;
                                    851 ;	assignBit
      0001BB C2 96            [12]  852 	clr	_CFLR
                                    853 ;	assignBit
      0001BD C2 97            [12]  854 	clr	_CFTLR
                                    855 ;	assignBit
      0001BF C2 94            [12]  856 	clr	_HOT
                                    857 ;	assignBit
      0001C1 C2 95            [12]  858 	clr	_BUZ
                                    859 ;	fire_alarm_panel.c:233: while(!LAMP);
      0001C3                        860 00155$:
      0001C3 30 A6 FD         [24]  861 	jnb	_LAMP,00155$
                                    862 ;	fire_alarm_panel.c:234: if(RI) receive();
      0001C6 30 98 03         [24]  863 	jnb	_RI,00161$
      0001C9 12r04r5F         [24]  864 	lcall	_receive
      0001CC                        865 00161$:
                                    866 ;	fire_alarm_panel.c:238: if(!EVQ) {
      0001CC 20 A1 43         [24]  867 	jb	_EVQ,00169$
                                    868 ;	fire_alarm_panel.c:239: BL = 1;
                                    869 ;	assignBit
      0001CF D2 A7            [12]  870 	setb	_BL
                                    871 ;	fire_alarm_panel.c:240: BUZ = 1;
                                    872 ;	assignBit
      0001D1 D2 95            [12]  873 	setb	_BUZ
                                    874 ;	fire_alarm_panel.c:241: HOT = 1;
                                    875 ;	assignBit
      0001D3 D2 94            [12]  876 	setb	_HOT
                                    877 ;	fire_alarm_panel.c:242: CFLR = 1;
                                    878 ;	assignBit
      0001D5 D2 96            [12]  879 	setb	_CFLR
                                    880 ;	fire_alarm_panel.c:243: lcd_cmd(LINE1);
      0001D7 90r00r07         [24]  881 	mov	dptr,#_LINE1
      0001DA 75 F0 80         [24]  882 	mov	b, #0x80
      0001DD 12r05r42         [24]  883 	lcall	_lcd_cmd
                                    884 ;	fire_alarm_panel.c:244: lcd_disp(TEVQ);
      0001E0 90r00rB7         [24]  885 	mov	dptr,#_TEVQ
      0001E3 75 F0 80         [24]  886 	mov	b, #0x80
      0001E6 12r05r96         [24]  887 	lcall	_lcd_disp
                                    888 ;	fire_alarm_panel.c:245: lcd_cmd(LINE2);
      0001E9 90r00r0B         [24]  889 	mov	dptr,#_LINE2
      0001EC 75 F0 80         [24]  890 	mov	b, #0x80
      0001EF 12r05r42         [24]  891 	lcall	_lcd_cmd
                                    892 ;	fire_alarm_panel.c:246: lcd_disp(TEXT4);
      0001F2 90r00r95         [24]  893 	mov	dptr,#_TEXT4
      0001F5 75 F0 80         [24]  894 	mov	b, #0x80
      0001F8 12r05r96         [24]  895 	lcall	_lcd_disp
                                    896 ;	fire_alarm_panel.c:249: while(!EVQ && !RI) {
      0001FB                        897 00163$:
      0001FB 20 A1 08         [24]  898 	jb	_EVQ,00165$
      0001FE 20 98 05         [24]  899 	jb	_RI,00165$
                                    900 ;	fire_alarm_panel.c:250: delay1();
      000201 12r06r10         [24]  901 	lcall	_delay1
      000204 80 F5            [24]  902 	sjmp	00163$
      000206                        903 00165$:
                                    904 ;	fire_alarm_panel.c:253: if(RI) receive();
      000206 30 98 03         [24]  905 	jnb	_RI,00167$
      000209 12r04r5F         [24]  906 	lcall	_receive
      00020C                        907 00167$:
                                    908 ;	fire_alarm_panel.c:256: BUZ = 0;
                                    909 ;	assignBit
      00020C C2 95            [12]  910 	clr	_BUZ
                                    911 ;	fire_alarm_panel.c:257: HOT = 0;
                                    912 ;	assignBit
      00020E C2 94            [12]  913 	clr	_HOT
                                    914 ;	fire_alarm_panel.c:258: CFLR = 0;
                                    915 ;	assignBit
      000210 C2 96            [12]  916 	clr	_CFLR
      000212                        917 00169$:
                                    918 ;	fire_alarm_panel.c:262: if (!PR1 && !PR2) {
      000212 20*05 0B         [24]  919 	jb	_PR1,00171$
      000215 20*06 08         [24]  920 	jb	_PR2,00171$
                                    921 ;	fire_alarm_panel.c:263: CFLR = 0;
                                    922 ;	assignBit
      000218 C2 96            [12]  923 	clr	_CFLR
                                    924 ;	fire_alarm_panel.c:264: CFTLR = 0;
                                    925 ;	assignBit
      00021A C2 97            [12]  926 	clr	_CFTLR
                                    927 ;	fire_alarm_panel.c:265: HOT = 0;
                                    928 ;	assignBit
      00021C C2 94            [12]  929 	clr	_HOT
                                    930 ;	fire_alarm_panel.c:266: BUZ = 0;
                                    931 ;	assignBit
      00021E C2 95            [12]  932 	clr	_BUZ
      000220                        933 00171$:
                                    934 ;	fire_alarm_panel.c:269: delay();
      000220 12r06r23         [24]  935 	lcall	_delay
                                    936 ;	fire_alarm_panel.c:272: if(!PR1 && !PR2) {
      000223 20*05 27         [24]  937 	jb	_PR1,00174$
      000226 20*06 24         [24]  938 	jb	_PR2,00174$
                                    939 ;	fire_alarm_panel.c:273: lcd_cmd(LINE1);
      000229 90r00r07         [24]  940 	mov	dptr,#_LINE1
      00022C 75 F0 80         [24]  941 	mov	b, #0x80
      00022F 12r05r42         [24]  942 	lcall	_lcd_cmd
                                    943 ;	fire_alarm_panel.c:274: lcd_disp(TEXT1);
      000232 90r00r0D         [24]  944 	mov	dptr,#_TEXT1
      000235 75 F0 80         [24]  945 	mov	b, #0x80
      000238 12r05r96         [24]  946 	lcall	_lcd_disp
                                    947 ;	fire_alarm_panel.c:275: lcd_cmd(LINE2);
      00023B 90r00r0B         [24]  948 	mov	dptr,#_LINE2
      00023E 75 F0 80         [24]  949 	mov	b, #0x80
      000241 12r05r42         [24]  950 	lcall	_lcd_cmd
                                    951 ;	fire_alarm_panel.c:276: lcd_disp(TEXT3);
      000244 90r00r2F         [24]  952 	mov	dptr,#_TEXT3
      000247 75 F0 80         [24]  953 	mov	b, #0x80
      00024A 12r05r96         [24]  954 	lcall	_lcd_disp
      00024D                        955 00174$:
                                    956 ;	fire_alarm_panel.c:280: if(BLT1 > 0) {
      00024D E5*00            [12]  957 	mov	a,_BLT1
      00024F 60 05            [24]  958 	jz	00179$
                                    959 ;	fire_alarm_panel.c:281: BLT1--;
                                    960 ;	fire_alarm_panel.c:282: if(BLT1 == 0) {
      000251 D5*00 02         [24]  961 	djnz	_BLT1,00179$
                                    962 ;	fire_alarm_panel.c:283: BL = 0;
                                    963 ;	assignBit
      000254 C2 A7            [12]  964 	clr	_BL
      000256                        965 00179$:
                                    966 ;	fire_alarm_panel.c:288: if(!LB) {
      000256 20 A2 45         [24]  967 	jb	_LB,00190$
                                    968 ;	fire_alarm_panel.c:289: CFTLR = 1;
                                    969 ;	assignBit
      000259 D2 97            [12]  970 	setb	_CFTLR
                                    971 ;	fire_alarm_panel.c:290: if(!LISO) {
      00025B 20*04 09         [24]  972 	jb	_LISO,00183$
                                    973 ;	fire_alarm_panel.c:291: BUZ = 1;
                                    974 ;	assignBit
      00025E D2 95            [12]  975 	setb	_BUZ
                                    976 ;	fire_alarm_panel.c:292: if(!SIL) {
      000260 20 A0 04         [24]  977 	jb	_SIL,00183$
                                    978 ;	fire_alarm_panel.c:294: LISO = 1;
                                    979 ;	assignBit
      000263 D2*04            [12]  980 	setb	_LISO
                                    981 ;	fire_alarm_panel.c:295: BUZ = 0;
                                    982 ;	assignBit
      000265 C2 95            [12]  983 	clr	_BUZ
      000267                        984 00183$:
                                    985 ;	fire_alarm_panel.c:299: BL = 1;
                                    986 ;	assignBit
      000267 D2 A7            [12]  987 	setb	_BL
                                    988 ;	fire_alarm_panel.c:300: lcd_cmd(LINE1);
      000269 90r00r07         [24]  989 	mov	dptr,#_LINE1
      00026C 75 F0 80         [24]  990 	mov	b, #0x80
      00026F 12r05r42         [24]  991 	lcall	_lcd_cmd
                                    992 ;	fire_alarm_panel.c:301: lcd_disp(LOWB);
      000272 90r01r0C         [24]  993 	mov	dptr,#_LOWB
      000275 75 F0 80         [24]  994 	mov	b, #0x80
      000278 12r05r96         [24]  995 	lcall	_lcd_disp
                                    996 ;	fire_alarm_panel.c:302: lcd_cmd(LINE2);
      00027B 90r00r0B         [24]  997 	mov	dptr,#_LINE2
      00027E 75 F0 80         [24]  998 	mov	b, #0x80
      000281 12r05r42         [24]  999 	lcall	_lcd_cmd
                                   1000 ;	fire_alarm_panel.c:303: lcd_disp(LOWM);
      000284 90r01r1D         [24] 1001 	mov	dptr,#_LOWM
      000287 75 F0 80         [24] 1002 	mov	b, #0x80
      00028A 12r05r96         [24] 1003 	lcall	_lcd_disp
                                   1004 ;	fire_alarm_panel.c:304: delay1();
      00028D 12r06r10         [24] 1005 	lcall	_delay1
                                   1006 ;	fire_alarm_panel.c:305: delay1();
      000290 12r06r10         [24] 1007 	lcall	_delay1
                                   1008 ;	fire_alarm_panel.c:307: if(LISO) {
      000293 20*04 03         [24] 1009 	jb	_LISO,00535$
      000296 02r00r44         [24] 1010 	ljmp	00193$
      000299                       1011 00535$:
                                   1012 ;	fire_alarm_panel.c:308: BUZ = 0; // Keep buzzer off if silenced
                                   1013 ;	assignBit
      000299 C2 95            [12] 1014 	clr	_BUZ
      00029B 02r00r44         [24] 1015 	ljmp	00193$
      00029E                       1016 00190$:
                                   1017 ;	fire_alarm_panel.c:311: LISO = 0;
                                   1018 ;	assignBit
      00029E C2*04            [12] 1019 	clr	_LISO
                                   1020 ;	fire_alarm_panel.c:313: if(!PR1 && !PR2) {
      0002A0 30*05 03         [24] 1021 	jnb	_PR1,00536$
      0002A3 02r00r44         [24] 1022 	ljmp	00193$
      0002A6                       1023 00536$:
      0002A6 30*06 03         [24] 1024 	jnb	_PR2,00537$
      0002A9 02r00r44         [24] 1025 	ljmp	00193$
      0002AC                       1026 00537$:
                                   1027 ;	fire_alarm_panel.c:314: CFTLR = 0;
                                   1028 ;	assignBit
      0002AC C2 97            [12] 1029 	clr	_CFTLR
                                   1030 ;	fire_alarm_panel.c:318: }
      0002AE 02r00r44         [24] 1031 	ljmp	00193$
                                   1032 ;------------------------------------------------------------
                                   1033 ;Allocation info for local variables in function 'init_system'
                                   1034 ;------------------------------------------------------------
                                   1035 ;	fire_alarm_panel.c:320: void init_system(void)
                                   1036 ;	-----------------------------------------
                                   1037 ;	 function init_system
                                   1038 ;	-----------------------------------------
      0002B1                       1039 _init_system:
                                   1040 ;	fire_alarm_panel.c:323: P1 = 0x00; // All indicators OFF initially
      0002B1 75 90 00         [24] 1041 	mov	_P1,#0x00
                                   1042 ;	fire_alarm_panel.c:324: P0 = 0xFF;
      0002B4 75 80 FF         [24] 1043 	mov	_P0,#0xff
                                   1044 ;	fire_alarm_panel.c:325: P2 = 0xFF;
      0002B7 75 A0 FF         [24] 1045 	mov	_P2,#0xff
                                   1046 ;	fire_alarm_panel.c:326: P3 = 0xFF;
      0002BA 75 B0 FF         [24] 1047 	mov	_P3,#0xff
                                   1048 ;	fire_alarm_panel.c:329: LISO = 0;
                                   1049 ;	assignBit
      0002BD C2*04            [12] 1050 	clr	_LISO
                                   1051 ;	fire_alarm_panel.c:330: SLC1 = 0;
                                   1052 ;	assignBit
      0002BF C2*02            [12] 1053 	clr	_SLC1
                                   1054 ;	fire_alarm_panel.c:331: SLC2 = 0;
                                   1055 ;	assignBit
      0002C1 C2*03            [12] 1056 	clr	_SLC2
                                   1057 ;	fire_alarm_panel.c:332: Z1 = 0;
                                   1058 ;	assignBit
      0002C3 C2*00            [12] 1059 	clr	_Z1
                                   1060 ;	fire_alarm_panel.c:333: Z2 = 0;
                                   1061 ;	assignBit
      0002C5 C2*01            [12] 1062 	clr	_Z2
                                   1063 ;	fire_alarm_panel.c:334: PR1 = 0;
                                   1064 ;	assignBit
      0002C7 C2*05            [12] 1065 	clr	_PR1
                                   1066 ;	fire_alarm_panel.c:335: PR2 = 0;
                                   1067 ;	assignBit
      0002C9 C2*06            [12] 1068 	clr	_PR2
                                   1069 ;	fire_alarm_panel.c:337: BLT1 = 30;
      0002CB 75*00 1E         [24] 1070 	mov	_BLT1,#0x1e
                                   1071 ;	fire_alarm_panel.c:338: RAP = 0;
      0002CE 75*01 00         [24] 1072 	mov	_RAP,#0x00
                                   1073 ;	fire_alarm_panel.c:341: TMOD = 0x20;
      0002D1 75 89 20         [24] 1074 	mov	_TMOD,#0x20
                                   1075 ;	fire_alarm_panel.c:342: TH1 = 253;  // -3 for 9600 baud
      0002D4 75 8D FD         [24] 1076 	mov	_TH1,#0xfd
                                   1077 ;	fire_alarm_panel.c:343: SCON = 0x50;
      0002D7 75 98 50         [24] 1078 	mov	_SCON,#0x50
                                   1079 ;	fire_alarm_panel.c:344: TR1 = 1;
                                   1080 ;	assignBit
      0002DA D2 8E            [12] 1081 	setb	_TR1
                                   1082 ;	fire_alarm_panel.c:345: }
      0002DC 22               [24] 1083 	ret
                                   1084 ;------------------------------------------------------------
                                   1085 ;Allocation info for local variables in function 'prz1'
                                   1086 ;------------------------------------------------------------
                                   1087 ;	fire_alarm_panel.c:347: void prz1(void)
                                   1088 ;	-----------------------------------------
                                   1089 ;	 function prz1
                                   1090 ;	-----------------------------------------
      0002DD                       1091 _prz1:
                                   1092 ;	fire_alarm_panel.c:349: if(!Z1) {
      0002DD 20*00 12         [24] 1093 	jb	_Z1,00102$
                                   1094 ;	fire_alarm_panel.c:350: lcd_cmd(LINE1);
      0002E0 90r00r07         [24] 1095 	mov	dptr,#_LINE1
      0002E3 75 F0 80         [24] 1096 	mov	b, #0x80
      0002E6 12r05r42         [24] 1097 	lcall	_lcd_cmd
                                   1098 ;	fire_alarm_panel.c:351: lcd_disp(TZONE1);
      0002E9 90r00r40         [24] 1099 	mov	dptr,#_TZONE1
      0002EC 75 F0 80         [24] 1100 	mov	b, #0x80
      0002EF 12r05r96         [24] 1101 	lcall	_lcd_disp
      0002F2                       1102 00102$:
                                   1103 ;	fire_alarm_panel.c:355: if(!SHORT1) {
      0002F2 20 82 25         [24] 1104 	jb	_SHORT1,00129$
                                   1105 ;	fire_alarm_panel.c:356: lcd_cmd(LINE2);
      0002F5 90r00r0B         [24] 1106 	mov	dptr,#_LINE2
      0002F8 75 F0 80         [24] 1107 	mov	b, #0x80
      0002FB 12r05r42         [24] 1108 	lcall	_lcd_cmd
                                   1109 ;	fire_alarm_panel.c:357: lcd_disp(SHORT);
      0002FE 90r00r73         [24] 1110 	mov	dptr,#_SHORT
      000301 75 F0 80         [24] 1111 	mov	b, #0x80
      000304 12r05r96         [24] 1112 	lcall	_lcd_disp
                                   1113 ;	fire_alarm_panel.c:358: CFTLR = 1;  // Fault LED ON
                                   1114 ;	assignBit
      000307 D2 97            [12] 1115 	setb	_CFTLR
                                   1116 ;	fire_alarm_panel.c:359: CFLR = 0;   // Fire LED OFF
                                   1117 ;	assignBit
      000309 C2 96            [12] 1118 	clr	_CFLR
                                   1119 ;	fire_alarm_panel.c:360: HOT = 0;    // Hooter OFF
                                   1120 ;	assignBit
      00030B C2 94            [12] 1121 	clr	_HOT
                                   1122 ;	fire_alarm_panel.c:361: if(!SLC1) {
      00030D 20*02 05         [24] 1123 	jb	_SLC1,00104$
                                   1124 ;	fire_alarm_panel.c:362: BUZ = 1; // Buzzer ON if not silenced
                                   1125 ;	assignBit
      000310 D2 95            [12] 1126 	setb	_BUZ
      000312 02r03r9B         [24] 1127 	ljmp	00130$
      000315                       1128 00104$:
                                   1129 ;	fire_alarm_panel.c:364: BUZ = 0; // Buzzer OFF if silenced
                                   1130 ;	assignBit
      000315 C2 95            [12] 1131 	clr	_BUZ
      000317 02r03r9B         [24] 1132 	ljmp	00130$
      00031A                       1133 00129$:
                                   1134 ;	fire_alarm_panel.c:366: } else if(!FIRE1) {
      00031A 20 80 2E         [24] 1135 	jb	_FIRE1,00126$
                                   1136 ;	fire_alarm_panel.c:367: lcd_cmd(LINE2);
      00031D 90r00r0B         [24] 1137 	mov	dptr,#_LINE2
      000320 75 F0 80         [24] 1138 	mov	b, #0x80
      000323 12r05r42         [24] 1139 	lcall	_lcd_cmd
                                   1140 ;	fire_alarm_panel.c:368: lcd_disp(FIRE);
      000326 90r00r62         [24] 1141 	mov	dptr,#_FIRE
      000329 75 F0 80         [24] 1142 	mov	b, #0x80
      00032C 12r05r96         [24] 1143 	lcall	_lcd_disp
                                   1144 ;	fire_alarm_panel.c:369: CFLR = 1;   // Fire LED ON
                                   1145 ;	assignBit
      00032F D2 96            [12] 1146 	setb	_CFLR
                                   1147 ;	fire_alarm_panel.c:371: if(FIRE2 && OPEN2 && SHORT2) { // Zone 2 healthy
      000331 30 83 08         [24] 1148 	jnb	_FIRE2,00107$
      000334 30 84 05         [24] 1149 	jnb	_OPEN2,00107$
      000337 30 85 02         [24] 1150 	jnb	_SHORT2,00107$
                                   1151 ;	fire_alarm_panel.c:372: CFTLR = 0;
                                   1152 ;	assignBit
      00033A C2 97            [12] 1153 	clr	_CFTLR
      00033C                       1154 00107$:
                                   1155 ;	fire_alarm_panel.c:374: if(!SLC1) {
      00033C 20*02 06         [24] 1156 	jb	_SLC1,00111$
                                   1157 ;	fire_alarm_panel.c:375: BUZ = 1;  // Buzzer ON if not silenced
                                   1158 ;	assignBit
      00033F D2 95            [12] 1159 	setb	_BUZ
                                   1160 ;	fire_alarm_panel.c:376: HOT = 1;  // Hooter ON if not silenced
                                   1161 ;	assignBit
      000341 D2 94            [12] 1162 	setb	_HOT
      000343 80 56            [24] 1163 	sjmp	00130$
      000345                       1164 00111$:
                                   1165 ;	fire_alarm_panel.c:378: BUZ = 0;  // Buzzer OFF if silenced
                                   1166 ;	assignBit
      000345 C2 95            [12] 1167 	clr	_BUZ
                                   1168 ;	fire_alarm_panel.c:379: HOT = 0;  // Hooter OFF if silenced
                                   1169 ;	assignBit
      000347 C2 94            [12] 1170 	clr	_HOT
      000349 80 50            [24] 1171 	sjmp	00130$
      00034B                       1172 00126$:
                                   1173 ;	fire_alarm_panel.c:381: } else if(!OPEN1) {
      00034B 20 81 23         [24] 1174 	jb	_OPEN1,00123$
                                   1175 ;	fire_alarm_panel.c:382: lcd_cmd(LINE2);
      00034E 90r00r0B         [24] 1176 	mov	dptr,#_LINE2
      000351 75 F0 80         [24] 1177 	mov	b, #0x80
      000354 12r05r42         [24] 1178 	lcall	_lcd_cmd
                                   1179 ;	fire_alarm_panel.c:383: lcd_disp(OPEN);
      000357 90r00r84         [24] 1180 	mov	dptr,#_OPEN
      00035A 75 F0 80         [24] 1181 	mov	b, #0x80
      00035D 12r05r96         [24] 1182 	lcall	_lcd_disp
                                   1183 ;	fire_alarm_panel.c:384: CFTLR = 1;  // Fault LED ON
                                   1184 ;	assignBit
      000360 D2 97            [12] 1185 	setb	_CFTLR
                                   1186 ;	fire_alarm_panel.c:385: CFLR = 0;   // Fire LED OFF
                                   1187 ;	assignBit
      000362 C2 96            [12] 1188 	clr	_CFLR
                                   1189 ;	fire_alarm_panel.c:386: HOT = 0;    // Hooter OFF
                                   1190 ;	assignBit
      000364 C2 94            [12] 1191 	clr	_HOT
                                   1192 ;	fire_alarm_panel.c:387: if(!SLC1) {
      000366 20*02 04         [24] 1193 	jb	_SLC1,00114$
                                   1194 ;	fire_alarm_panel.c:388: BUZ = 1; // Buzzer ON if not silenced
                                   1195 ;	assignBit
      000369 D2 95            [12] 1196 	setb	_BUZ
      00036B 80 2E            [24] 1197 	sjmp	00130$
      00036D                       1198 00114$:
                                   1199 ;	fire_alarm_panel.c:390: BUZ = 0; // Buzzer OFF if silenced
                                   1200 ;	assignBit
      00036D C2 95            [12] 1201 	clr	_BUZ
      00036F 80 2A            [24] 1202 	sjmp	00130$
      000371                       1203 00123$:
                                   1204 ;	fire_alarm_panel.c:395: PR1 = 0;
                                   1205 ;	assignBit
      000371 C2*05            [12] 1206 	clr	_PR1
                                   1207 ;	fire_alarm_panel.c:396: SLC1 = 0;
                                   1208 ;	assignBit
      000373 C2*02            [12] 1209 	clr	_SLC1
                                   1210 ;	fire_alarm_panel.c:399: if(FIRE2 && OPEN2 && SHORT2) { // Zone 2 also healthy
      000375 30 83 0E         [24] 1211 	jnb	_FIRE2,00117$
      000378 30 84 0B         [24] 1212 	jnb	_OPEN2,00117$
      00037B 30 85 08         [24] 1213 	jnb	_SHORT2,00117$
                                   1214 ;	fire_alarm_panel.c:400: CFTLR = 0;
                                   1215 ;	assignBit
      00037E C2 97            [12] 1216 	clr	_CFTLR
                                   1217 ;	fire_alarm_panel.c:401: CFLR = 0;
                                   1218 ;	assignBit
      000380 C2 96            [12] 1219 	clr	_CFLR
                                   1220 ;	fire_alarm_panel.c:402: HOT = 0;
                                   1221 ;	assignBit
      000382 C2 94            [12] 1222 	clr	_HOT
                                   1223 ;	fire_alarm_panel.c:403: BUZ = 0;
                                   1224 ;	assignBit
      000384 C2 95            [12] 1225 	clr	_BUZ
      000386                       1226 00117$:
                                   1227 ;	fire_alarm_panel.c:406: if(ZONE1) { // If zone is not isolated
      000386 30 A4 12         [24] 1228 	jnb	_ZONE1,00130$
                                   1229 ;	fire_alarm_panel.c:407: lcd_cmd(LINE2);
      000389 90r00r0B         [24] 1230 	mov	dptr,#_LINE2
      00038C 75 F0 80         [24] 1231 	mov	b, #0x80
      00038F 12r05r42         [24] 1232 	lcall	_lcd_cmd
                                   1233 ;	fire_alarm_panel.c:408: lcd_disp(ISO1H);
      000392 90r00rEA         [24] 1234 	mov	dptr,#_ISO1H
      000395 75 F0 80         [24] 1235 	mov	b, #0x80
      000398 12r05r96         [24] 1236 	lcall	_lcd_disp
      00039B                       1237 00130$:
                                   1238 ;	fire_alarm_panel.c:412: delay1();
                                   1239 ;	fire_alarm_panel.c:413: }
      00039B 02r06r10         [24] 1240 	ljmp	_delay1
                                   1241 ;------------------------------------------------------------
                                   1242 ;Allocation info for local variables in function 'prz2'
                                   1243 ;------------------------------------------------------------
                                   1244 ;	fire_alarm_panel.c:415: void prz2(void)
                                   1245 ;	-----------------------------------------
                                   1246 ;	 function prz2
                                   1247 ;	-----------------------------------------
      00039E                       1248 _prz2:
                                   1249 ;	fire_alarm_panel.c:417: if(!Z2) { // Fixed: should check Z2 for zone 2 testing
      00039E 20*01 12         [24] 1250 	jb	_Z2,00102$
                                   1251 ;	fire_alarm_panel.c:418: lcd_cmd(LINE1);
      0003A1 90r00r07         [24] 1252 	mov	dptr,#_LINE1
      0003A4 75 F0 80         [24] 1253 	mov	b, #0x80
      0003A7 12r05r42         [24] 1254 	lcall	_lcd_cmd
                                   1255 ;	fire_alarm_panel.c:419: lcd_disp(TZONE2);
      0003AA 90r00r51         [24] 1256 	mov	dptr,#_TZONE2
      0003AD 75 F0 80         [24] 1257 	mov	b, #0x80
      0003B0 12r05r96         [24] 1258 	lcall	_lcd_disp
      0003B3                       1259 00102$:
                                   1260 ;	fire_alarm_panel.c:423: if(!SHORT2) {
      0003B3 20 85 25         [24] 1261 	jb	_SHORT2,00129$
                                   1262 ;	fire_alarm_panel.c:424: lcd_cmd(LINE2);
      0003B6 90r00r0B         [24] 1263 	mov	dptr,#_LINE2
      0003B9 75 F0 80         [24] 1264 	mov	b, #0x80
      0003BC 12r05r42         [24] 1265 	lcall	_lcd_cmd
                                   1266 ;	fire_alarm_panel.c:425: lcd_disp(SHORT);
      0003BF 90r00r73         [24] 1267 	mov	dptr,#_SHORT
      0003C2 75 F0 80         [24] 1268 	mov	b, #0x80
      0003C5 12r05r96         [24] 1269 	lcall	_lcd_disp
                                   1270 ;	fire_alarm_panel.c:426: CFTLR = 1;  // Fault LED ON
                                   1271 ;	assignBit
      0003C8 D2 97            [12] 1272 	setb	_CFTLR
                                   1273 ;	fire_alarm_panel.c:427: CFLR = 0;   // Fire LED OFF
                                   1274 ;	assignBit
      0003CA C2 96            [12] 1275 	clr	_CFLR
                                   1276 ;	fire_alarm_panel.c:428: HOT = 0;    // Hooter OFF
                                   1277 ;	assignBit
      0003CC C2 94            [12] 1278 	clr	_HOT
                                   1279 ;	fire_alarm_panel.c:429: if(!SLC2) {
      0003CE 20*03 05         [24] 1280 	jb	_SLC2,00104$
                                   1281 ;	fire_alarm_panel.c:430: BUZ = 1; // Buzzer ON if not silenced
                                   1282 ;	assignBit
      0003D1 D2 95            [12] 1283 	setb	_BUZ
      0003D3 02r04r5C         [24] 1284 	ljmp	00130$
      0003D6                       1285 00104$:
                                   1286 ;	fire_alarm_panel.c:432: BUZ = 0; // Buzzer OFF if silenced
                                   1287 ;	assignBit
      0003D6 C2 95            [12] 1288 	clr	_BUZ
      0003D8 02r04r5C         [24] 1289 	ljmp	00130$
      0003DB                       1290 00129$:
                                   1291 ;	fire_alarm_panel.c:434: } else if(!FIRE2) {
      0003DB 20 83 2E         [24] 1292 	jb	_FIRE2,00126$
                                   1293 ;	fire_alarm_panel.c:435: lcd_cmd(LINE2);
      0003DE 90r00r0B         [24] 1294 	mov	dptr,#_LINE2
      0003E1 75 F0 80         [24] 1295 	mov	b, #0x80
      0003E4 12r05r42         [24] 1296 	lcall	_lcd_cmd
                                   1297 ;	fire_alarm_panel.c:436: lcd_disp(FIRE);
      0003E7 90r00r62         [24] 1298 	mov	dptr,#_FIRE
      0003EA 75 F0 80         [24] 1299 	mov	b, #0x80
      0003ED 12r05r96         [24] 1300 	lcall	_lcd_disp
                                   1301 ;	fire_alarm_panel.c:437: CFLR = 1;   // Fire LED ON
                                   1302 ;	assignBit
      0003F0 D2 96            [12] 1303 	setb	_CFLR
                                   1304 ;	fire_alarm_panel.c:439: if(FIRE1 && OPEN1 && SHORT1) { // Zone 1 healthy
      0003F2 30 80 08         [24] 1305 	jnb	_FIRE1,00107$
      0003F5 30 81 05         [24] 1306 	jnb	_OPEN1,00107$
      0003F8 30 82 02         [24] 1307 	jnb	_SHORT1,00107$
                                   1308 ;	fire_alarm_panel.c:440: CFTLR = 0;
                                   1309 ;	assignBit
      0003FB C2 97            [12] 1310 	clr	_CFTLR
      0003FD                       1311 00107$:
                                   1312 ;	fire_alarm_panel.c:442: if(!SLC2) {
      0003FD 20*03 06         [24] 1313 	jb	_SLC2,00111$
                                   1314 ;	fire_alarm_panel.c:443: BUZ = 1;  // Buzzer ON if not silenced
                                   1315 ;	assignBit
      000400 D2 95            [12] 1316 	setb	_BUZ
                                   1317 ;	fire_alarm_panel.c:444: HOT = 1;  // Hooter ON if not silenced
                                   1318 ;	assignBit
      000402 D2 94            [12] 1319 	setb	_HOT
      000404 80 56            [24] 1320 	sjmp	00130$
      000406                       1321 00111$:
                                   1322 ;	fire_alarm_panel.c:446: BUZ = 0;  // Buzzer OFF if silenced
                                   1323 ;	assignBit
      000406 C2 95            [12] 1324 	clr	_BUZ
                                   1325 ;	fire_alarm_panel.c:447: HOT = 0;  // Hooter OFF if silenced
                                   1326 ;	assignBit
      000408 C2 94            [12] 1327 	clr	_HOT
      00040A 80 50            [24] 1328 	sjmp	00130$
      00040C                       1329 00126$:
                                   1330 ;	fire_alarm_panel.c:449: } else if(!OPEN2) {
      00040C 20 84 23         [24] 1331 	jb	_OPEN2,00123$
                                   1332 ;	fire_alarm_panel.c:450: lcd_cmd(LINE2);
      00040F 90r00r0B         [24] 1333 	mov	dptr,#_LINE2
      000412 75 F0 80         [24] 1334 	mov	b, #0x80
      000415 12r05r42         [24] 1335 	lcall	_lcd_cmd
                                   1336 ;	fire_alarm_panel.c:451: lcd_disp(OPEN);
      000418 90r00r84         [24] 1337 	mov	dptr,#_OPEN
      00041B 75 F0 80         [24] 1338 	mov	b, #0x80
      00041E 12r05r96         [24] 1339 	lcall	_lcd_disp
                                   1340 ;	fire_alarm_panel.c:452: CFTLR = 1;  // Fault LED ON
                                   1341 ;	assignBit
      000421 D2 97            [12] 1342 	setb	_CFTLR
                                   1343 ;	fire_alarm_panel.c:453: CFLR = 0;   // Fire LED OFF
                                   1344 ;	assignBit
      000423 C2 96            [12] 1345 	clr	_CFLR
                                   1346 ;	fire_alarm_panel.c:454: HOT = 0;    // Hooter OFF
                                   1347 ;	assignBit
      000425 C2 94            [12] 1348 	clr	_HOT
                                   1349 ;	fire_alarm_panel.c:455: if(!SLC2) {
      000427 20*03 04         [24] 1350 	jb	_SLC2,00114$
                                   1351 ;	fire_alarm_panel.c:456: BUZ = 1; // Buzzer ON if not silenced
                                   1352 ;	assignBit
      00042A D2 95            [12] 1353 	setb	_BUZ
      00042C 80 2E            [24] 1354 	sjmp	00130$
      00042E                       1355 00114$:
                                   1356 ;	fire_alarm_panel.c:458: BUZ = 0; // Buzzer OFF if silenced
                                   1357 ;	assignBit
      00042E C2 95            [12] 1358 	clr	_BUZ
      000430 80 2A            [24] 1359 	sjmp	00130$
      000432                       1360 00123$:
                                   1361 ;	fire_alarm_panel.c:463: PR2 = 0;
                                   1362 ;	assignBit
      000432 C2*06            [12] 1363 	clr	_PR2
                                   1364 ;	fire_alarm_panel.c:464: SLC2 = 0;
                                   1365 ;	assignBit
      000434 C2*03            [12] 1366 	clr	_SLC2
                                   1367 ;	fire_alarm_panel.c:467: if(FIRE1 && OPEN1 && SHORT1) { // Zone 1 also healthy
      000436 30 80 0E         [24] 1368 	jnb	_FIRE1,00117$
      000439 30 81 0B         [24] 1369 	jnb	_OPEN1,00117$
      00043C 30 82 08         [24] 1370 	jnb	_SHORT1,00117$
                                   1371 ;	fire_alarm_panel.c:468: CFTLR = 0;
                                   1372 ;	assignBit
      00043F C2 97            [12] 1373 	clr	_CFTLR
                                   1374 ;	fire_alarm_panel.c:469: CFLR = 0;
                                   1375 ;	assignBit
      000441 C2 96            [12] 1376 	clr	_CFLR
                                   1377 ;	fire_alarm_panel.c:470: HOT = 0;
                                   1378 ;	assignBit
      000443 C2 94            [12] 1379 	clr	_HOT
                                   1380 ;	fire_alarm_panel.c:471: BUZ = 0;
                                   1381 ;	assignBit
      000445 C2 95            [12] 1382 	clr	_BUZ
      000447                       1383 00117$:
                                   1384 ;	fire_alarm_panel.c:474: if(ZONE2) { // If zone is not isolated
      000447 30 A5 12         [24] 1385 	jnb	_ZONE2,00130$
                                   1386 ;	fire_alarm_panel.c:475: lcd_cmd(LINE2);
      00044A 90r00r0B         [24] 1387 	mov	dptr,#_LINE2
      00044D 75 F0 80         [24] 1388 	mov	b, #0x80
      000450 12r05r42         [24] 1389 	lcall	_lcd_cmd
                                   1390 ;	fire_alarm_panel.c:476: lcd_disp(ISO2H);
      000453 90r00rFB         [24] 1391 	mov	dptr,#_ISO2H
      000456 75 F0 80         [24] 1392 	mov	b, #0x80
      000459 12r05r96         [24] 1393 	lcall	_lcd_disp
      00045C                       1394 00130$:
                                   1395 ;	fire_alarm_panel.c:480: delay1();
                                   1396 ;	fire_alarm_panel.c:481: }
      00045C 02r06r10         [24] 1397 	ljmp	_delay1
                                   1398 ;------------------------------------------------------------
                                   1399 ;Allocation info for local variables in function 'receive'
                                   1400 ;------------------------------------------------------------
                                   1401 ;received_data Allocated to registers r7 
                                   1402 ;------------------------------------------------------------
                                   1403 ;	fire_alarm_panel.c:483: void receive(void)
                                   1404 ;	-----------------------------------------
                                   1405 ;	 function receive
                                   1406 ;	-----------------------------------------
      00045F                       1407 _receive:
                                   1408 ;	fire_alarm_panel.c:487: received_data = SBUF;
      00045F AF 99            [24] 1409 	mov	r7,_SBUF
                                   1410 ;	fire_alarm_panel.c:488: RI = 0;
                                   1411 ;	assignBit
      000461 C2 98            [12] 1412 	clr	_RI
                                   1413 ;	fire_alarm_panel.c:489: SBUF = received_data;
      000463 8F 99            [24] 1414 	mov	_SBUF,r7
                                   1415 ;	fire_alarm_panel.c:490: while(!TI);
      000465                       1416 00101$:
                                   1417 ;	fire_alarm_panel.c:491: TI = 0;
                                   1418 ;	assignBit
      000465 10 99 02         [24] 1419 	jbc	_TI,00281$
      000468 80 FB            [24] 1420 	sjmp	00101$
      00046A                       1421 00281$:
                                   1422 ;	fire_alarm_panel.c:493: switch(received_data) {
      00046A BF 00 02         [24] 1423 	cjne	r7,#0x00,00282$
      00046D 80 32            [24] 1424 	sjmp	00106$
      00046F                       1425 00282$:
      00046F BF 01 02         [24] 1426 	cjne	r7,#0x01,00283$
      000472 80 3C            [24] 1427 	sjmp	00110$
      000474                       1428 00283$:
      000474 BF 02 02         [24] 1429 	cjne	r7,#0x02,00284$
      000477 80 46            [24] 1430 	sjmp	00114$
      000479                       1431 00284$:
      000479 BF 03 02         [24] 1432 	cjne	r7,#0x03,00285$
      00047C 80 55            [24] 1433 	sjmp	00122$
      00047E                       1434 00285$:
      00047E BF 40 02         [24] 1435 	cjne	r7,#0x40,00286$
      000481 80 46            [24] 1436 	sjmp	00118$
      000483                       1437 00286$:
      000483 BF AA 02         [24] 1438 	cjne	r7,#0xaa,00287$
      000486 80 0A            [24] 1439 	sjmp	00104$
      000488                       1440 00287$:
      000488 BF BB 02         [24] 1441 	cjne	r7,#0xbb,00288$
      00048B 80 0B            [24] 1442 	sjmp	00105$
      00048D                       1443 00288$:
                                   1444 ;	fire_alarm_panel.c:494: case 0xAA:
      00048D BF FF 5C         [24] 1445 	cjne	r7,#0xff,00130$
      000490 80 50            [24] 1446 	sjmp	00126$
      000492                       1447 00104$:
                                   1448 ;	fire_alarm_panel.c:495: send_data(P2);
      000492 85 A0 82         [24] 1449 	mov	dpl, _P2
                                   1450 ;	fire_alarm_panel.c:496: break;
                                   1451 ;	fire_alarm_panel.c:498: case 0xBB:
      000495 02r04rF4         [24] 1452 	ljmp	_send_data
      000498                       1453 00105$:
                                   1454 ;	fire_alarm_panel.c:499: send_data(P0 | 0xC0);
      000498 74 C0            [12] 1455 	mov	a,#0xc0
      00049A 45 80            [12] 1456 	orl	a,_P0
      00049C F5 82            [12] 1457 	mov	dpl,a
                                   1458 ;	fire_alarm_panel.c:500: break;
                                   1459 ;	fire_alarm_panel.c:502: case 0x00:
      00049E 02r04rF4         [24] 1460 	ljmp	_send_data
      0004A1                       1461 00106$:
                                   1462 ;	fire_alarm_panel.c:503: silence_alarms();
      0004A1 C0 07            [24] 1463 	push	ar7
      0004A3 12r04rFD         [24] 1464 	lcall	_silence_alarms
      0004A6 D0 07            [24] 1465 	pop	ar7
                                   1466 ;	fire_alarm_panel.c:504: SBUF = received_data;
      0004A8 8F 99            [24] 1467 	mov	_SBUF,r7
                                   1468 ;	fire_alarm_panel.c:505: while(!TI);
      0004AA                       1469 00107$:
                                   1470 ;	fire_alarm_panel.c:506: TI = 0;
                                   1471 ;	assignBit
      0004AA 10 99 02         [24] 1472 	jbc	_TI,00290$
      0004AD 80 FB            [24] 1473 	sjmp	00107$
      0004AF                       1474 00290$:
                                   1475 ;	fire_alarm_panel.c:507: break;
                                   1476 ;	fire_alarm_panel.c:509: case 0x01:
      0004AF 22               [24] 1477 	ret
      0004B0                       1478 00110$:
                                   1479 ;	fire_alarm_panel.c:510: silence_alarms();
      0004B0 C0 07            [24] 1480 	push	ar7
      0004B2 12r04rFD         [24] 1481 	lcall	_silence_alarms
      0004B5 D0 07            [24] 1482 	pop	ar7
                                   1483 ;	fire_alarm_panel.c:511: SBUF = received_data;
      0004B7 8F 99            [24] 1484 	mov	_SBUF,r7
                                   1485 ;	fire_alarm_panel.c:512: while(!TI);
      0004B9                       1486 00111$:
                                   1487 ;	fire_alarm_panel.c:513: TI = 0;
                                   1488 ;	assignBit
      0004B9 10 99 02         [24] 1489 	jbc	_TI,00291$
      0004BC 80 FB            [24] 1490 	sjmp	00111$
      0004BE                       1491 00291$:
                                   1492 ;	fire_alarm_panel.c:514: break;
                                   1493 ;	fire_alarm_panel.c:516: case 0x02:
      0004BE 22               [24] 1494 	ret
      0004BF                       1495 00114$:
                                   1496 ;	fire_alarm_panel.c:517: EVQ = 0;
                                   1497 ;	assignBit
      0004BF C2 A1            [12] 1498 	clr	_EVQ
                                   1499 ;	fire_alarm_panel.c:518: SBUF = received_data;
      0004C1 8F 99            [24] 1500 	mov	_SBUF,r7
                                   1501 ;	fire_alarm_panel.c:519: while(!TI);
      0004C3                       1502 00115$:
                                   1503 ;	fire_alarm_panel.c:520: TI = 0;
                                   1504 ;	assignBit
      0004C3 10 99 02         [24] 1505 	jbc	_TI,00292$
      0004C6 80 FB            [24] 1506 	sjmp	00115$
      0004C8                       1507 00292$:
                                   1508 ;	fire_alarm_panel.c:521: break;
                                   1509 ;	fire_alarm_panel.c:523: case 0x40:
      0004C8 22               [24] 1510 	ret
      0004C9                       1511 00118$:
                                   1512 ;	fire_alarm_panel.c:524: Z2 = 1;
                                   1513 ;	assignBit
      0004C9 D2*01            [12] 1514 	setb	_Z2
                                   1515 ;	fire_alarm_panel.c:525: SBUF = received_data;
      0004CB 8F 99            [24] 1516 	mov	_SBUF,r7
                                   1517 ;	fire_alarm_panel.c:526: while(!TI);
      0004CD                       1518 00119$:
                                   1519 ;	fire_alarm_panel.c:527: TI = 0;
                                   1520 ;	assignBit
      0004CD 10 99 02         [24] 1521 	jbc	_TI,00293$
      0004D0 80 FB            [24] 1522 	sjmp	00119$
      0004D2                       1523 00293$:
                                   1524 ;	fire_alarm_panel.c:528: break;
                                   1525 ;	fire_alarm_panel.c:530: case 0x03:
      0004D2 22               [24] 1526 	ret
      0004D3                       1527 00122$:
                                   1528 ;	fire_alarm_panel.c:531: silence_alarms();
      0004D3 C0 07            [24] 1529 	push	ar7
      0004D5 12r04rFD         [24] 1530 	lcall	_silence_alarms
      0004D8 D0 07            [24] 1531 	pop	ar7
                                   1532 ;	fire_alarm_panel.c:532: SBUF = received_data;
      0004DA 8F 99            [24] 1533 	mov	_SBUF,r7
                                   1534 ;	fire_alarm_panel.c:533: while(!TI);
      0004DC                       1535 00123$:
                                   1536 ;	fire_alarm_panel.c:534: TI = 0;
                                   1537 ;	assignBit
      0004DC 10 99 02         [24] 1538 	jbc	_TI,00294$
      0004DF 80 FB            [24] 1539 	sjmp	00123$
      0004E1                       1540 00294$:
                                   1541 ;	fire_alarm_panel.c:535: break;
                                   1542 ;	fire_alarm_panel.c:537: case 0xFF:
      0004E1 22               [24] 1543 	ret
      0004E2                       1544 00126$:
                                   1545 ;	fire_alarm_panel.c:538: SBUF = received_data;
      0004E2 8F 99            [24] 1546 	mov	_SBUF,r7
                                   1547 ;	fire_alarm_panel.c:539: while(!TI);
      0004E4                       1548 00127$:
                                   1549 ;	fire_alarm_panel.c:540: TI = 0;
                                   1550 ;	assignBit
      0004E4 10 99 02         [24] 1551 	jbc	_TI,00295$
      0004E7 80 FB            [24] 1552 	sjmp	00127$
      0004E9                       1553 00295$:
                                   1554 ;	fire_alarm_panel.c:542: init_system();
                                   1555 ;	fire_alarm_panel.c:543: break;
                                   1556 ;	fire_alarm_panel.c:545: default:
      0004E9 02r02rB1         [24] 1557 	ljmp	_init_system
      0004EC                       1558 00130$:
                                   1559 ;	fire_alarm_panel.c:547: SBUF = received_data;
      0004EC 8F 99            [24] 1560 	mov	_SBUF,r7
                                   1561 ;	fire_alarm_panel.c:548: while(!TI);
      0004EE                       1562 00131$:
                                   1563 ;	fire_alarm_panel.c:549: TI = 0;
                                   1564 ;	assignBit
      0004EE 10 99 02         [24] 1565 	jbc	_TI,00296$
      0004F1 80 FB            [24] 1566 	sjmp	00131$
      0004F3                       1567 00296$:
                                   1568 ;	fire_alarm_panel.c:551: }
                                   1569 ;	fire_alarm_panel.c:552: }
      0004F3 22               [24] 1570 	ret
                                   1571 ;------------------------------------------------------------
                                   1572 ;Allocation info for local variables in function 'send_data'
                                   1573 ;------------------------------------------------------------
                                   1574 ;data          Allocated to registers 
                                   1575 ;------------------------------------------------------------
                                   1576 ;	fire_alarm_panel.c:554: void send_data(unsigned char data)
                                   1577 ;	-----------------------------------------
                                   1578 ;	 function send_data
                                   1579 ;	-----------------------------------------
      0004F4                       1580 _send_data:
      0004F4 85 82 99         [24] 1581 	mov	_SBUF,dpl
                                   1582 ;	fire_alarm_panel.c:557: while(!TI);
      0004F7                       1583 00101$:
                                   1584 ;	fire_alarm_panel.c:558: TI = 0;
                                   1585 ;	assignBit
      0004F7 10 99 02         [24] 1586 	jbc	_TI,00118$
      0004FA 80 FB            [24] 1587 	sjmp	00101$
      0004FC                       1588 00118$:
                                   1589 ;	fire_alarm_panel.c:559: }
      0004FC 22               [24] 1590 	ret
                                   1591 ;------------------------------------------------------------
                                   1592 ;Allocation info for local variables in function 'silence_alarms'
                                   1593 ;------------------------------------------------------------
                                   1594 ;	fire_alarm_panel.c:561: void silence_alarms(void)
                                   1595 ;	-----------------------------------------
                                   1596 ;	 function silence_alarms
                                   1597 ;	-----------------------------------------
      0004FD                       1598 _silence_alarms:
                                   1599 ;	fire_alarm_panel.c:563: SLC1 = 1;
                                   1600 ;	assignBit
      0004FD D2*02            [12] 1601 	setb	_SLC1
                                   1602 ;	fire_alarm_panel.c:564: SLC2 = 1;
                                   1603 ;	assignBit
      0004FF D2*03            [12] 1604 	setb	_SLC2
                                   1605 ;	fire_alarm_panel.c:565: LISO = 1;
                                   1606 ;	assignBit
      000501 D2*04            [12] 1607 	setb	_LISO
                                   1608 ;	fire_alarm_panel.c:566: BUZ = 0;
                                   1609 ;	assignBit
      000503 C2 95            [12] 1610 	clr	_BUZ
                                   1611 ;	fire_alarm_panel.c:567: HOT = 0;
                                   1612 ;	assignBit
      000505 C2 94            [12] 1613 	clr	_HOT
                                   1614 ;	fire_alarm_panel.c:568: }
      000507 22               [24] 1615 	ret
                                   1616 ;------------------------------------------------------------
                                   1617 ;Allocation info for local variables in function 'spliter'
                                   1618 ;------------------------------------------------------------
                                   1619 ;data          Allocated to registers r7 
                                   1620 ;------------------------------------------------------------
                                   1621 ;	fire_alarm_panel.c:570: void spliter(unsigned char data)
                                   1622 ;	-----------------------------------------
                                   1623 ;	 function spliter
                                   1624 ;	-----------------------------------------
      000508                       1625 _spliter:
      000508 AF 82            [24] 1626 	mov	r7, dpl
                                   1627 ;	fire_alarm_panel.c:572: L = data & 0x0F;
      00050A 74 0F            [12] 1628 	mov	a,#0x0f
      00050C 5F               [12] 1629 	anl	a,r7
      00050D F5*03            [12] 1630 	mov	_L,a
                                   1631 ;	fire_alarm_panel.c:573: U = (data >> 4) & 0x0F;
      00050F EF               [12] 1632 	mov	a,r7
      000510 C4               [12] 1633 	swap	a
      000511 54 0F            [12] 1634 	anl	a,#0x0f
      000513 F5*02            [12] 1635 	mov	_U,a
                                   1636 ;	fire_alarm_panel.c:574: }
      000515 22               [24] 1637 	ret
                                   1638 ;------------------------------------------------------------
                                   1639 ;Allocation info for local variables in function 'move'
                                   1640 ;------------------------------------------------------------
                                   1641 ;data          Allocated to registers r7 
                                   1642 ;------------------------------------------------------------
                                   1643 ;	fire_alarm_panel.c:576: void move(unsigned char data)
                                   1644 ;	-----------------------------------------
                                   1645 ;	 function move
                                   1646 ;	-----------------------------------------
      000516                       1647 _move:
      000516 AF 82            [24] 1648 	mov	r7, dpl
                                   1649 ;	fire_alarm_panel.c:578: P1 = (P1 & 0xF0) | data;
      000518 E5 90            [12] 1650 	mov	a,_P1
      00051A 54 F0            [12] 1651 	anl	a,#0xf0
      00051C 4F               [12] 1652 	orl	a,r7
      00051D F5 90            [12] 1653 	mov	_P1,a
                                   1654 ;	fire_alarm_panel.c:579: EN = 1;
                                   1655 ;	assignBit
      00051F D2 87            [12] 1656 	setb	_EN
                                   1657 ;	fire_alarm_panel.c:580: delay();
      000521 12r06r23         [24] 1658 	lcall	_delay
                                   1659 ;	fire_alarm_panel.c:581: EN = 0;
                                   1660 ;	assignBit
      000524 C2 87            [12] 1661 	clr	_EN
                                   1662 ;	fire_alarm_panel.c:582: delay();
                                   1663 ;	fire_alarm_panel.c:583: }
      000526 02r06r23         [24] 1664 	ljmp	_delay
                                   1665 ;------------------------------------------------------------
                                   1666 ;Allocation info for local variables in function 'move1'
                                   1667 ;------------------------------------------------------------
                                   1668 ;data          Allocated to registers r7 
                                   1669 ;------------------------------------------------------------
                                   1670 ;	fire_alarm_panel.c:585: void move1(unsigned char data)
                                   1671 ;	-----------------------------------------
                                   1672 ;	 function move1
                                   1673 ;	-----------------------------------------
      000529                       1674 _move1:
      000529 AF 82            [24] 1675 	mov	r7, dpl
                                   1676 ;	fire_alarm_panel.c:587: P1 = (P1 & 0xF0) | data;
      00052B E5 90            [12] 1677 	mov	a,_P1
      00052D 54 F0            [12] 1678 	anl	a,#0xf0
      00052F 4F               [12] 1679 	orl	a,r7
      000530 F5 90            [12] 1680 	mov	_P1,a
                                   1681 ;	fire_alarm_panel.c:588: EN = 1;
                                   1682 ;	assignBit
      000532 D2 87            [12] 1683 	setb	_EN
                                   1684 ;	fire_alarm_panel.c:592: __endasm;
      000534 00               [12] 1685 	nop
                                   1686 ;	fire_alarm_panel.c:593: EN = 0;
                                   1687 ;	assignBit
      000535 C2 87            [12] 1688 	clr	_EN
                                   1689 ;	fire_alarm_panel.c:603: __endasm;
      000537 00               [12] 1690 	nop
      000538 00               [12] 1691 	nop
      000539 00               [12] 1692 	nop
      00053A 00               [12] 1693 	nop
      00053B 00               [12] 1694 	nop
      00053C 00               [12] 1695 	nop
      00053D 00               [12] 1696 	nop
      00053E 00               [12] 1697 	nop
                                   1698 ;	fire_alarm_panel.c:604: EN = 1;
                                   1699 ;	assignBit
      00053F D2 87            [12] 1700 	setb	_EN
                                   1701 ;	fire_alarm_panel.c:605: }
      000541 22               [24] 1702 	ret
                                   1703 ;------------------------------------------------------------
                                   1704 ;Allocation info for local variables in function 'lcd_cmd'
                                   1705 ;------------------------------------------------------------
                                   1706 ;cmd_ptr       Allocated to registers r5 r6 r7 
                                   1707 ;cmd           Allocated to registers r3 
                                   1708 ;i             Allocated to registers r4 
                                   1709 ;------------------------------------------------------------
                                   1710 ;	fire_alarm_panel.c:607: void lcd_cmd(unsigned char *cmd_ptr)
                                   1711 ;	-----------------------------------------
                                   1712 ;	 function lcd_cmd
                                   1713 ;	-----------------------------------------
      000542                       1714 _lcd_cmd:
      000542 AD 82            [24] 1715 	mov	r5, dpl
      000544 AE 83            [24] 1716 	mov	r6, dph
      000546 AF F0            [24] 1717 	mov	r7, b
                                   1718 ;	fire_alarm_panel.c:612: while((cmd = cmd_ptr[i]) != 0) {
      000548 7C 00            [12] 1719 	mov	r4,#0x00
      00054A                       1720 00101$:
      00054A EC               [12] 1721 	mov	a,r4
      00054B 2D               [12] 1722 	add	a, r5
      00054C F9               [12] 1723 	mov	r1,a
      00054D E4               [12] 1724 	clr	a
      00054E 3E               [12] 1725 	addc	a, r6
      00054F FA               [12] 1726 	mov	r2,a
      000550 8F 03            [24] 1727 	mov	ar3,r7
      000552 89 82            [24] 1728 	mov	dpl,r1
      000554 8A 83            [24] 1729 	mov	dph,r2
      000556 8B F0            [24] 1730 	mov	b,r3
      000558 12r00r00         [24] 1731 	lcall	__gptrget
      00055B FB               [12] 1732 	mov	r3,a
      00055C 60 26            [24] 1733 	jz	00104$
                                   1734 ;	fire_alarm_panel.c:613: i++;
      00055E 0C               [12] 1735 	inc	r4
                                   1736 ;	fire_alarm_panel.c:614: RS = 0;
                                   1737 ;	assignBit
      00055F C2 86            [12] 1738 	clr	_RS
                                   1739 ;	fire_alarm_panel.c:615: spliter(cmd);
      000561 8B 82            [24] 1740 	mov	dpl, r3
      000563 C0 07            [24] 1741 	push	ar7
      000565 C0 06            [24] 1742 	push	ar6
      000567 C0 05            [24] 1743 	push	ar5
      000569 C0 04            [24] 1744 	push	ar4
      00056B 12r05r08         [24] 1745 	lcall	_spliter
                                   1746 ;	fire_alarm_panel.c:616: move(U);
      00056E 85*02 82         [24] 1747 	mov	dpl, _U
      000571 12r05r16         [24] 1748 	lcall	_move
                                   1749 ;	fire_alarm_panel.c:617: move(L);
      000574 85*03 82         [24] 1750 	mov	dpl, _L
      000577 12r05r16         [24] 1751 	lcall	_move
      00057A D0 04            [24] 1752 	pop	ar4
      00057C D0 05            [24] 1753 	pop	ar5
      00057E D0 06            [24] 1754 	pop	ar6
      000580 D0 07            [24] 1755 	pop	ar7
      000582 80 C6            [24] 1756 	sjmp	00101$
      000584                       1757 00104$:
                                   1758 ;	fire_alarm_panel.c:619: }
      000584 22               [24] 1759 	ret
                                   1760 ;------------------------------------------------------------
                                   1761 ;Allocation info for local variables in function 'lcd_data'
                                   1762 ;------------------------------------------------------------
                                   1763 ;data          Allocated to registers 
                                   1764 ;------------------------------------------------------------
                                   1765 ;	fire_alarm_panel.c:621: void lcd_data(unsigned char data)
                                   1766 ;	-----------------------------------------
                                   1767 ;	 function lcd_data
                                   1768 ;	-----------------------------------------
      000585                       1769 _lcd_data:
                                   1770 ;	fire_alarm_panel.c:623: RS = 1;
                                   1771 ;	assignBit
      000585 D2 86            [12] 1772 	setb	_RS
                                   1773 ;	fire_alarm_panel.c:624: spliter(data);
      000587 12r05r08         [24] 1774 	lcall	_spliter
                                   1775 ;	fire_alarm_panel.c:625: move1(U);
      00058A 85*02 82         [24] 1776 	mov	dpl, _U
      00058D 12r05r29         [24] 1777 	lcall	_move1
                                   1778 ;	fire_alarm_panel.c:626: move1(L);
      000590 85*03 82         [24] 1779 	mov	dpl, _L
                                   1780 ;	fire_alarm_panel.c:627: }
      000593 02r05r29         [24] 1781 	ljmp	_move1
                                   1782 ;------------------------------------------------------------
                                   1783 ;Allocation info for local variables in function 'lcd_disp'
                                   1784 ;------------------------------------------------------------
                                   1785 ;text_ptr      Allocated to registers r5 r6 r7 
                                   1786 ;ch            Allocated to registers r3 
                                   1787 ;i             Allocated to registers r4 
                                   1788 ;------------------------------------------------------------
                                   1789 ;	fire_alarm_panel.c:629: void lcd_disp(unsigned char *text_ptr)
                                   1790 ;	-----------------------------------------
                                   1791 ;	 function lcd_disp
                                   1792 ;	-----------------------------------------
      000596                       1793 _lcd_disp:
      000596 AD 82            [24] 1794 	mov	r5, dpl
      000598 AE 83            [24] 1795 	mov	r6, dph
      00059A AF F0            [24] 1796 	mov	r7, b
                                   1797 ;	fire_alarm_panel.c:634: while((ch = text_ptr[i]) != 0) {
      00059C 7C 00            [12] 1798 	mov	r4,#0x00
      00059E                       1799 00101$:
      00059E EC               [12] 1800 	mov	a,r4
      00059F 2D               [12] 1801 	add	a, r5
      0005A0 F9               [12] 1802 	mov	r1,a
      0005A1 E4               [12] 1803 	clr	a
      0005A2 3E               [12] 1804 	addc	a, r6
      0005A3 FA               [12] 1805 	mov	r2,a
      0005A4 8F 03            [24] 1806 	mov	ar3,r7
      0005A6 89 82            [24] 1807 	mov	dpl,r1
      0005A8 8A 83            [24] 1808 	mov	dph,r2
      0005AA 8B F0            [24] 1809 	mov	b,r3
      0005AC 12r00r00         [24] 1810 	lcall	__gptrget
      0005AF FB               [12] 1811 	mov	r3,a
      0005B0 60 18            [24] 1812 	jz	00104$
                                   1813 ;	fire_alarm_panel.c:635: i++;
      0005B2 0C               [12] 1814 	inc	r4
                                   1815 ;	fire_alarm_panel.c:636: lcd_data(ch);
      0005B3 8B 82            [24] 1816 	mov	dpl, r3
      0005B5 C0 07            [24] 1817 	push	ar7
      0005B7 C0 06            [24] 1818 	push	ar6
      0005B9 C0 05            [24] 1819 	push	ar5
      0005BB C0 04            [24] 1820 	push	ar4
      0005BD 12r05r85         [24] 1821 	lcall	_lcd_data
      0005C0 D0 04            [24] 1822 	pop	ar4
      0005C2 D0 05            [24] 1823 	pop	ar5
      0005C4 D0 06            [24] 1824 	pop	ar6
      0005C6 D0 07            [24] 1825 	pop	ar7
      0005C8 80 D4            [24] 1826 	sjmp	00101$
      0005CA                       1827 00104$:
                                   1828 ;	fire_alarm_panel.c:638: }
      0005CA 22               [24] 1829 	ret
                                   1830 ;------------------------------------------------------------
                                   1831 ;Allocation info for local variables in function 'lcd_disp1'
                                   1832 ;------------------------------------------------------------
                                   1833 ;text_ptr      Allocated to registers r5 r6 r7 
                                   1834 ;ch            Allocated to registers r3 
                                   1835 ;i             Allocated to registers r4 
                                   1836 ;------------------------------------------------------------
                                   1837 ;	fire_alarm_panel.c:640: void lcd_disp1(unsigned char *text_ptr)
                                   1838 ;	-----------------------------------------
                                   1839 ;	 function lcd_disp1
                                   1840 ;	-----------------------------------------
      0005CB                       1841 _lcd_disp1:
      0005CB AD 82            [24] 1842 	mov	r5, dpl
      0005CD AE 83            [24] 1843 	mov	r6, dph
      0005CF AF F0            [24] 1844 	mov	r7, b
                                   1845 ;	fire_alarm_panel.c:645: while((ch = text_ptr[i]) != 0) {
      0005D1 7C 00            [12] 1846 	mov	r4,#0x00
      0005D3                       1847 00101$:
      0005D3 EC               [12] 1848 	mov	a,r4
      0005D4 2D               [12] 1849 	add	a, r5
      0005D5 F9               [12] 1850 	mov	r1,a
      0005D6 E4               [12] 1851 	clr	a
      0005D7 3E               [12] 1852 	addc	a, r6
      0005D8 FA               [12] 1853 	mov	r2,a
      0005D9 8F 03            [24] 1854 	mov	ar3,r7
      0005DB 89 82            [24] 1855 	mov	dpl,r1
      0005DD 8A 83            [24] 1856 	mov	dph,r2
      0005DF 8B F0            [24] 1857 	mov	b,r3
      0005E1 12r00r00         [24] 1858 	lcall	__gptrget
      0005E4 FB               [12] 1859 	mov	r3,a
      0005E5 60 1B            [24] 1860 	jz	00104$
                                   1861 ;	fire_alarm_panel.c:646: i++;
      0005E7 0C               [12] 1862 	inc	r4
                                   1863 ;	fire_alarm_panel.c:647: lcd_data(ch);
      0005E8 8B 82            [24] 1864 	mov	dpl, r3
      0005EA C0 07            [24] 1865 	push	ar7
      0005EC C0 06            [24] 1866 	push	ar6
      0005EE C0 05            [24] 1867 	push	ar5
      0005F0 C0 04            [24] 1868 	push	ar4
      0005F2 12r05r85         [24] 1869 	lcall	_lcd_data
                                   1870 ;	fire_alarm_panel.c:648: delay2();
      0005F5 12r06r03         [24] 1871 	lcall	_delay2
      0005F8 D0 04            [24] 1872 	pop	ar4
      0005FA D0 05            [24] 1873 	pop	ar5
      0005FC D0 06            [24] 1874 	pop	ar6
      0005FE D0 07            [24] 1875 	pop	ar7
      000600 80 D1            [24] 1876 	sjmp	00101$
      000602                       1877 00104$:
                                   1878 ;	fire_alarm_panel.c:650: }
      000602 22               [24] 1879 	ret
                                   1880 ;------------------------------------------------------------
                                   1881 ;Allocation info for local variables in function 'delay2'
                                   1882 ;------------------------------------------------------------
                                   1883 ;R5            Allocated to registers r7 
                                   1884 ;R6            Allocated to registers r5 
                                   1885 ;R7            Allocated to registers r6 
                                   1886 ;------------------------------------------------------------
                                   1887 ;	fire_alarm_panel.c:652: void delay2(void)
                                   1888 ;	-----------------------------------------
                                   1889 ;	 function delay2
                                   1890 ;	-----------------------------------------
      000603                       1891 _delay2:
                                   1892 ;	fire_alarm_panel.c:656: for(R5 = 1; R5 > 0; R5--) {
      000603 7F 01            [12] 1893 	mov	r7,#0x01
                                   1894 ;	fire_alarm_panel.c:657: for(R7 = 255; R7 > 0; R7--) {
      000605                       1895 00121$:
      000605 7E FF            [12] 1896 	mov	r6,#0xff
                                   1897 ;	fire_alarm_panel.c:658: for(R6 = 255; R6 > 0; R6--);
      000607                       1898 00119$:
      000607 7D FF            [12] 1899 	mov	r5,#0xff
      000609                       1900 00105$:
      000609 DD FE            [24] 1901 	djnz	r5,00105$
                                   1902 ;	fire_alarm_panel.c:657: for(R7 = 255; R7 > 0; R7--) {
      00060B DE FA            [24] 1903 	djnz	r6,00119$
                                   1904 ;	fire_alarm_panel.c:656: for(R5 = 1; R5 > 0; R5--) {
      00060D DF F6            [24] 1905 	djnz	r7,00121$
                                   1906 ;	fire_alarm_panel.c:661: }
      00060F 22               [24] 1907 	ret
                                   1908 ;------------------------------------------------------------
                                   1909 ;Allocation info for local variables in function 'delay1'
                                   1910 ;------------------------------------------------------------
                                   1911 ;R5            Allocated to registers r7 
                                   1912 ;R6            Allocated to registers r5 
                                   1913 ;R7            Allocated to registers r6 
                                   1914 ;------------------------------------------------------------
                                   1915 ;	fire_alarm_panel.c:663: void delay1(void)
                                   1916 ;	-----------------------------------------
                                   1917 ;	 function delay1
                                   1918 ;	-----------------------------------------
      000610                       1919 _delay1:
                                   1920 ;	fire_alarm_panel.c:667: for(R5 = 8; R5 > 0; R5--) {
      000610 7F 08            [12] 1921 	mov	r7,#0x08
                                   1922 ;	fire_alarm_panel.c:668: for(R7 = 255; R7 > 0; R7--) {
      000612                       1923 00123$:
      000612 7E FF            [12] 1924 	mov	r6,#0xff
                                   1925 ;	fire_alarm_panel.c:669: for(R6 = 255; R6 > 0; R6--);
      000614                       1926 00121$:
      000614 7D FF            [12] 1927 	mov	r5,#0xff
      000616                       1928 00107$:
      000616 DD FE            [24] 1929 	djnz	r5,00107$
                                   1930 ;	fire_alarm_panel.c:668: for(R7 = 255; R7 > 0; R7--) {
      000618 DE FA            [24] 1931 	djnz	r6,00121$
                                   1932 ;	fire_alarm_panel.c:667: for(R5 = 8; R5 > 0; R5--) {
      00061A DF F6            [24] 1933 	djnz	r7,00123$
                                   1934 ;	fire_alarm_panel.c:673: if(RI) {
      00061C 30 98 03         [24] 1935 	jnb	_RI,00112$
                                   1936 ;	fire_alarm_panel.c:674: receive();
                                   1937 ;	fire_alarm_panel.c:676: }
      00061F 02r04r5F         [24] 1938 	ljmp	_receive
      000622                       1939 00112$:
      000622 22               [24] 1940 	ret
                                   1941 ;------------------------------------------------------------
                                   1942 ;Allocation info for local variables in function 'delay'
                                   1943 ;------------------------------------------------------------
                                   1944 ;R6            Allocated to registers r6 
                                   1945 ;R7            Allocated to registers r7 
                                   1946 ;------------------------------------------------------------
                                   1947 ;	fire_alarm_panel.c:678: void delay(void)
                                   1948 ;	-----------------------------------------
                                   1949 ;	 function delay
                                   1950 ;	-----------------------------------------
      000623                       1951 _delay:
                                   1952 ;	fire_alarm_panel.c:682: for(R7 = 7; R7 > 0; R7--) {
      000623 7F 07            [12] 1953 	mov	r7,#0x07
                                   1954 ;	fire_alarm_panel.c:683: for(R6 = 15; R6 > 0; R6--);
      000625                       1955 00114$:
      000625 7E 0F            [12] 1956 	mov	r6,#0x0f
      000627                       1957 00104$:
      000627 DE FE            [24] 1958 	djnz	r6,00104$
                                   1959 ;	fire_alarm_panel.c:682: for(R7 = 7; R7 > 0; R7--) {
      000629 DF FA            [24] 1960 	djnz	r7,00114$
                                   1961 ;	fire_alarm_panel.c:685: } 
      00062B 22               [24] 1962 	ret
                                   1963 	.area CSEG    (CODE)
                                   1964 	.area CONST   (CODE)
                                   1965 	.area CONST   (CODE)
      000000                       1966 _INIT_COMMANDS:
      000000 20                    1967 	.db #0x20	; 32
      000001 28                    1968 	.db #0x28	; 40
      000002 0C                    1969 	.db #0x0c	; 12
      000003 01                    1970 	.db #0x01	; 1
      000004 06                    1971 	.db #0x06	; 6
      000005 80                    1972 	.db #0x80	; 128
      000006 00                    1973 	.db #0x00	; 0
                                   1974 	.area CSEG    (CODE)
                                   1975 	.area CONST   (CODE)
      000007                       1976 _LINE1:
      000007 01                    1977 	.db #0x01	; 1
      000008 06                    1978 	.db #0x06	; 6
      000009 80                    1979 	.db #0x80	; 128
      00000A 00                    1980 	.db #0x00	; 0
                                   1981 	.area CSEG    (CODE)
                                   1982 	.area CONST   (CODE)
      00000B                       1983 _LINE2:
      00000B C0                    1984 	.db #0xc0	; 192
      00000C 00                    1985 	.db #0x00	; 0
                                   1986 	.area CSEG    (CODE)
                                   1987 	.area CONST   (CODE)
      00000D                       1988 _TEXT1:
      00000D 20 41 47 4E 49 20 50  1989 	.ascii " AGNI PROTECTION"
             52 4F 54 45 43 54 49
             4F 4E
      00001D 00                    1990 	.db 0x00
                                   1991 	.area CSEG    (CODE)
                                   1992 	.area CONST   (CODE)
      00001E                       1993 _TEXT2:
      00001E 20 57 45 4C 43 4F 4D  1994 	.ascii " WELCOME TO ...."
             45 20 54 4F 20 2E 2E
             2E 2E
      00002E 00                    1995 	.db 0x00
                                   1996 	.area CSEG    (CODE)
                                   1997 	.area CONST   (CODE)
      00002F                       1998 _TEXT3:
      00002F 46 49 52 45 20 41 4C  1999 	.ascii "FIRE ALARM PANEL"
             41 52 4D 20 50 41 4E
             45 4C
      00003F 00                    2000 	.db 0x00
                                   2001 	.area CSEG    (CODE)
                                   2002 	.area CONST   (CODE)
      000040                       2003 _TZONE1:
      000040 20 5A 4F 4E 45 20 2D  2004 	.ascii " ZONE - 01      "
             20 30 31 20 20 20 20
             20 20
      000050 00                    2005 	.db 0x00
                                   2006 	.area CSEG    (CODE)
                                   2007 	.area CONST   (CODE)
      000051                       2008 _TZONE2:
      000051 20 5A 4F 4E 45 20 2D  2009 	.ascii " ZONE - 02      "
             20 30 32 20 20 20 20
             20 20
      000061 00                    2010 	.db 0x00
                                   2011 	.area CSEG    (CODE)
                                   2012 	.area CONST   (CODE)
      000062                       2013 _FIRE:
      000062 20 46 49 52 45 20 44  2014 	.ascii " FIRE DETECTED  "
             45 54 45 43 54 45 44
             20 20
      000072 00                    2015 	.db 0x00
                                   2016 	.area CSEG    (CODE)
                                   2017 	.area CONST   (CODE)
      000073                       2018 _SHORT:
      000073 20 53 48 4F 52 54 20  2019 	.ascii " SHORT DETECTED "
             44 45 54 45 43 54 45
             44 20
      000083 00                    2020 	.db 0x00
                                   2021 	.area CSEG    (CODE)
                                   2022 	.area CONST   (CODE)
      000084                       2023 _OPEN:
      000084 20 4F 50 45 4E 20 44  2024 	.ascii " OPEN DETECTED  "
             45 54 45 43 54 45 44
             20 20
      000094 00                    2025 	.db 0x00
                                   2026 	.area CSEG    (CODE)
                                   2027 	.area CONST   (CODE)
      000095                       2028 _TEXT4:
      000095 20 41 4C 4C 20 54 48  2029 	.ascii " ALL THE AREA   "
             45 20 41 52 45 41 20
             20 20
      0000A5 00                    2030 	.db 0x00
                                   2031 	.area CSEG    (CODE)
                                   2032 	.area CONST   (CODE)
      0000A6                       2033 _TLAMP:
      0000A6 50 41 4E 45 4C 20 54  2034 	.ascii "PANEL TESTING ON"
             45 53 54 49 4E 47 20
             4F 4E
      0000B6 00                    2035 	.db 0x00
                                   2036 	.area CSEG    (CODE)
                                   2037 	.area CONST   (CODE)
      0000B7                       2038 _TEVQ:
      0000B7 20 50 4C 45 41 53 45  2039 	.ascii " PLEASE EVACUATE"
             20 45 56 41 43 55 41
             54 45
      0000C7 00                    2040 	.db 0x00
                                   2041 	.area CSEG    (CODE)
                                   2042 	.area CONST   (CODE)
      0000C8                       2043 _ISO1:
      0000C8 5A 4F 4E 45 2D 20 30  2044 	.ascii "ZONE- 01 ISOLATE"
             31 20 49 53 4F 4C 41
             54 45
      0000D8 00                    2045 	.db 0x00
                                   2046 	.area CSEG    (CODE)
                                   2047 	.area CONST   (CODE)
      0000D9                       2048 _ISO2:
      0000D9 5A 4F 4E 45 2D 20 30  2049 	.ascii "ZONE- 02 ISOLATE"
             32 20 49 53 4F 4C 41
             54 45
      0000E9 00                    2050 	.db 0x00
                                   2051 	.area CSEG    (CODE)
                                   2052 	.area CONST   (CODE)
      0000EA                       2053 _ISO1H:
      0000EA 5A 4F 4E 45 2D 20 30  2054 	.ascii "ZONE- 01 HEALTHY"
             31 20 48 45 41 4C 54
             48 59
      0000FA 00                    2055 	.db 0x00
                                   2056 	.area CSEG    (CODE)
                                   2057 	.area CONST   (CODE)
      0000FB                       2058 _ISO2H:
      0000FB 5A 4F 4E 45 2D 20 30  2059 	.ascii "ZONE- 02 HEALTHY"
             32 20 48 45 41 4C 54
             48 59
      00010B 00                    2060 	.db 0x00
                                   2061 	.area CSEG    (CODE)
                                   2062 	.area CONST   (CODE)
      00010C                       2063 _LOWB:
      00010C 20 20 42 41 54 54 45  2064 	.ascii "  BATTERY LOW   "
             52 59 20 4C 4F 57 20
             20 20
      00011C 00                    2065 	.db 0x00
                                   2066 	.area CSEG    (CODE)
                                   2067 	.area CONST   (CODE)
      00011D                       2068 _LOWM:
      00011D 20 43 48 45 43 4B 20  2069 	.ascii " CHECK AC SUPPLY"
             41 43 20 53 55 50 50
             4C 59
      00012D 00                    2070 	.db 0x00
                                   2071 	.area CSEG    (CODE)
                                   2072 	.area XINIT   (CODE)
                                   2073 	.area CABS    (ABS,CODE)
